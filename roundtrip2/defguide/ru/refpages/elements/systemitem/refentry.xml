<refentry id="systemitem.element">
<?dbhtml filename="systemitem.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>systemitem</secondary></indexterm>
<refentrytitle>systemitem</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>systemitem</refname>
<refpurpose>&systemitem.purpose;</refpurpose>
</refnamediv>

&systemitem.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
A <sgmltag>SystemItem</sgmltag> identifies any system-related item or term.
The <sgmltag class='attribute'>Class</sgmltag> attribute defines a
number of common system-related terms.
</para>

<para>
Many inline elements in DocBook are, in fact, system-related.  Some of
the objects identified by the <sgmltag class='attribute'>Class</sgmltag>
attribute on <sgmltag>SystemItem</sgmltag> may eventually migrate out to be
inline elements of their own accord&hellip;and vice versa.
</para>

<refsect2><title>Processing expectations</title>
<para>
&format.inline; &pexp.moreinfo;
</para>
</refsect2>

<refsect2 role='fu' revision="4.0"><title>&FutureChanges;</title>
<para><indexterm><primary>DocBook DTD</primary><secondary>Changes for <acronym>V4.0</acronym></secondary>
</indexterm>In DocBook <acronym>V4.0</acronym>, the content model of
<sgmltag>SystemItem</sgmltag> will be constrained to <literal>(#PCDATA
| Replaceable | InlineGraphic)</literal>.
</para>
<para>
Also, the <literal>EnvironVar</literal> and <literal>Prompt</literal> values of
<sgmltag class='attribute'>Class</sgmltag> will be discarded (use
<sgmltag>EnVar</sgmltag> and <sgmltag>Prompt</sgmltag> instead).
</para>
</refsect2>

<refsect2 role='fu' revision="5.0"><title>&FutureChanges;</title>
<para><indexterm><primary>DocBook DTD</primary><secondary>Changes for <acronym>V5.0</acronym></secondary>
</indexterm>The <literal>register</literal> class value will be added
to support CPU registers. The <literal>constant</literal> class value
will be removed.</para>
</refsect2>

&systemitem.parents.gen;
&systemitem.children.gen;
</refsect1>
<refsect1 condition='ref.elem.attrdesc'><title>Attributes</title>
<variablelist>
<varlistentry><term>class</term>
<listitem>
<para>
<sgmltag class="attribute">Class</sgmltag> indicates the type of 
<sgmltag>SystemItem</sgmltag>.
</para>
</listitem>
</varlistentry>
<varlistentry><term>moreinfo</term>
<listitem>
<para>
If <sgmltag class='attribute'>MoreInfo</sgmltag> is set to <literal>RefEntry</literal>,
it implies that a <sgmltag>RefEntry</sgmltag> exists which further describes the
<sgmltag>SystemItem</sgmltag>.
</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 condition='ref.elem.seealso'><title>See Also</title>
&systemitem.seealso.gen;
</refsect1>
<refsect1><title>Examples</title>

<informalexample role="example-source">
<programlisting>&systemitem.example.1.txt;</programlisting>
</informalexample>

<anchor id="ex.os.systemitem.1" role="HACK-ex.out.start"/>
&systemitem.example.1.gen;
<anchor id="ex.oe.systemitem.1" role="HACK-ex.out.end"/>

&systemitem.example.seealso.gen;
</refsect1>
</refentry>

