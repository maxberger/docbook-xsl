<?xml version="1.0" encoding="UTF-8"?>
<!--
Usage:
    Building 'The Definitive Guide (5.0)' - all(html, chm & pdf)
        $ ant

    Building 'The Definitive Guide (5.0)' - html
        $ ant html

    Building 'The Definitive Guide (5.0)' - chm
        $ ant chm

    Building 'The Definitive Guide (5.0)' - pdf
        $ ant pdf
-->
<project name="defguide5-en" default="all">

    <property file="../build-common.properties"/>
    <import file="../build-common.xml"/>

    <property name="doc.name" value="defguide5"/>

    <taskdef name="jing" classname="com.thaiopensource.relaxng.util.JingTask"/>

    <target name="usage">
        <echo message="Use the -projecthelp option instead"/>
    </target>

    <target name="clean" description="Clean the build directory">
        <delete dir="build"/>
        <delete file="bookinfo.xml"/>
        <delete file="stylesheets/chm-import.xsl"/>
        <delete file="stylesheets/fo-import.xsl"/>
        <delete file="stylesheets/html-import.xsl"/>
        <ant dir="refpages" target="clean"/>
    </target>

    <target name="init" depends="init-avail" description="Check runtime class"/>

    <target name="validate" depends="xinclude" description="Validate document">
        <jing rngfile="${docbook5.home}/rng/docbook.rng" checkid="false">
            <fileset dir="${basedir}${file.separator}src"
                    includes="**/*.xml"/>
        </jing>
        <!--ant dir="refpages" target="validate"/-->
        <jing rngfile="${docbook5.home}/rng/docbookxi.rng"
                file="../en/build/defguide5.xml"/>
    </target>

    <target name="all" description="Generate document - html,chm,pdf">
        <antcall target="html"/>
        <antcall target="chm"/>
        <antcall target="pdf"/>
    </target>

    <target name="xinclude.init">
        <uptodate property="xinclude.isUpToDate" targetfile="build/${doc.name}.xml">
            <srcfiles dir="." includes="book.xml, VERSION.xml"/>
            <srcfiles dir="src" includes="*.xml"/>
            <srcfiles dir="refpages" includes="intro-elements.xml, references.xml, elements/**/*.xml"/>
        </uptodate>
    </target>

    <target name="xinclude" depends="init, xinclude.init" unless="xinclude.isUpToDate" description="XInclude processing on document">
        <ant dir="refpages" target="all"/>

        <copy todir="build/figures">
            <fileset dir="figures" includes="*.png"/>
        </copy>

        <exec dir="${basedir}" executable="xsltproc" failonerror="true">
            <arg value="--nonet"/>
            <arg value="--output"/>
            <arg value="${basedir}${file.separator}bookinfo.xml"/>
            <arg value="${basedir}${file.separator}VERSION.xml"/>
            <arg value="${basedir}${file.separator}VERSION.xml"/>
        </exec>

        <exec dir="${basedir}" executable="xmllint" failonerror="true">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="${basedir}${file.separator}build/${doc.name}-tmp.xml"/>
            <arg value="${basedir}${file.separator}book.xml"/>
        </exec>

        <exec dir="${basedir}/build" executable="xmllint">
            <arg value="--encode"/>
            <arg value="UTF-8"/>
            <arg value="--output"/>
            <arg value="${basedir}${file.separator}build/${doc.name}.xml"/>
            <arg value="--format"/>
            <arg value="${basedir}${file.separator}build/${doc.name}-tmp.xml"/>
        </exec>
        <delete file="${basedir}${file.separator}build/${doc.name}-tmp.xml"/>
    </target>

    <target name="html.init">
        <uptodate property="html.isUpToDate" targetfile="build/html/.done">
            <srcfiles dir="." includes="book.xml, VERSION.xml"/>
            <srcfiles dir="src" includes="*.xml"/>
            <srcfiles dir="refpages" includes="intro-elements.xml, references.xml, elements/**/*.xml"/>
        </uptodate>
    </target>

    <!-- Total time: 9 minutes 10 seconds -->
    <target name="html" depends="xinclude,html.init" unless="html.isUpToDate" description="Generate document - html">

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/html-import.tmpl.xsl" tofile="stylesheets/html-import.xsl" filtering="true" overwrite="true"/>

        <copy file="html/defguide.css" todir="build/html"/>
        <copy todir="build/html/figures">
            <fileset dir="figures" includes="*.png"/>
        </copy>
        <copy todir="build/html/images">
            <fileset dir="${docbook5.xsl}/images" includes="*.git,*.png,*.tif,*.svg"/>
        </copy>

        <exec dir="${basedir}${file.separator}build${file.separator}html" executable="xsltproc" failonerror="true">
            <arg value="--nonet"/>
            <arg value="${basedir}${file.separator}stylesheets${file.separator}html.xsl"/>
            <arg value="${basedir}${file.separator}build${file.separator}${doc.name}.xml"/>
        </exec>

        <touch file="build/html/.done"/>
    </target>

    <target name="chm.init">
        <uptodate property="chm.isUpToDate" targetfile="build/chm/defguide5-en.chm">
            <srcfiles dir="." includes="book.xml, VERSION.xml"/>
            <srcfiles dir="src" includes="*.xml"/>
            <srcfiles dir="refpages" includes="intro-elements.xml, references.xml, elements/**/*.xml"/>
        </uptodate>
    </target>

    <target name="chm" depends="xinclude,chm.init" unless="chm.isUpToDate" description="Generate document - chm">
        <fail>
            <condition>
                <not><os family="windows"/></not>
            </condition>
            This target only known work on windows !
        </fail>

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/chm-import.tmpl.xsl" tofile="stylesheets/chm-import.xsl" filtering="true" overwrite="true"/>

        <copy file="html/defguide.css" todir="build/chm/htmlhelp"/>
        <copy todir="build/chm/htmlhelp/figures">
            <fileset dir="figures" includes="*.png"/>
        </copy>
        <copy todir="build/chm/htmlhelp/images">
            <fileset dir="${docbook5.xsl}/images" includes="*.git,*.png,*.tif,*.svg"/>
        </copy>

        <exec dir="${basedir}${file.separator}build${file.separator}chm" executable="xsltproc" failonerror="true">
            <arg value="--nonet"/>
            <arg value="${basedir}${file.separator}stylesheets${file.separator}chm.xsl"/>
            <arg value="${basedir}${file.separator}build${file.separator}${doc.name}.xml"/>
        </exec>
        <exec dir="${basedir}${file.separator}build${file.separator}chm" executable="hhc" failonerror="false">
            <arg value="htmlhelp.hhp"/>
        </exec>

        <delete dir="build/chm/htmlhelp"/>
        <delete dir="build/chm" excludes="**/*.chm"/>
    </target>

    <target name="pdf" depends="xinclude" description="Generate document - pdf">

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/fo-import.tmpl.xsl" tofile="stylesheets/fo-import.xsl" filtering="true" overwrite="true"/>

        <copy todir="build/pdf/figures">
            <fileset dir="figures" includes="*.png"/>
        </copy>
        <copy todir="build/pdf/images">
            <fileset dir="${docbook5.xsl}/images" includes="*.git,*.png,*.tif,*.svg"/>
        </copy>

        <java classname="com.icl.saxon.StyleSheet" fork="true"
                 failonerror="true" dir="${basedir}" maxmemory="512m">
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="${basedir}${file.separator}build/${file.separator}pdf${file.separator}${doc.name}.fo"/>
            <arg value="${basedir}${file.separator}build${file.separator}${doc.name}.xml"/>
            <arg value="${basedir}${file.separator}stylesheets${file.separator}fo.xsl"/>
        </java>

        <java classname="${fop.class}" fork="true"
                dir="${basedir}" maxmemory="512m">
            <classpath refid="lib.classpath"/>
            <arg value="build/pdf/${doc.name}.fo"/>
            <arg value="build/pdf/${doc.name}.pdf"/>
        </java>

        <delete dir="build/pdf/figures"/>
        <delete dir="build/pdf/images"/>
        <delete>
            <fileset dir="build/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
    </target>

</project>
