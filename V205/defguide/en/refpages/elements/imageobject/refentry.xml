<refentry id="imageobject.element" revision='3.1'>
<?dbhtml filename="imageobject.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>imageobject</secondary></indexterm>
<refentrytitle>imageobject</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>imageobject</refname>
<refpurpose>&imageobject.purpose;</refpurpose>
</refnamediv>

&imageobject.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>An <sgmltag>ImageObject</sgmltag> is a wrapper containing
<sgmltag>ImageData</sgmltag> and its associated meta-information.
</para>

<para>If the SVG Module is used, <sgmltag>ImageObject</sgmltag> can
also contain the <sgmltag>svg:svg</sgmltag> element.</para>

<refsect2 id="dbreproc.imageobject"><title>Processing expectations</title>
<para>&format.context; It might not be rendered at all, depending on its
placement within a <sgmltag>MediaObject</sgmltag> or
<sgmltag>InlineMediaObject</sgmltag> and the constraints on the
publishing system.  For a more detailed description of the semantics
involved, see <sgmltag>MediaObject</sgmltag>.
</para>
</refsect2> 


&imageobject.parents.gen;
&imageobject.children.gen;
</refsect1>
<refsect1 condition='ref.elem.seealso'><title>See Also</title>
&imageobject.seealso.gen;
</refsect1>
<refsect1><title>Examples</title>

<informalexample role="example-source">
<programlisting>&imageobject.example.1.txt;</programlisting>
</informalexample>

<anchor id="ex.os.imageobject.1" role="HACK-ex.out.start"/>
&imageobject.example.1.gen;
<anchor id="ex.oe.imageobject.1" role="HACK-ex.out.end"/>

<para>For additional examples, see also
&imageobject.example.seealso.gen;.</para>
</refsect1>
</refentry>

