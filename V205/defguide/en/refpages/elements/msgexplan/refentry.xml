<refentry id="msgexplan.element">
<?dbhtml filename="msgexplan.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>msgexplan</secondary></indexterm>
<refentrytitle>msgexplan</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>msgexplan</refname>
<refpurpose>&msgexplan.purpose;</refpurpose>
</refnamediv>

&msgexplan.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
A <sgmltag>MsgExplan</sgmltag> contains some sort of explanatory information
about a <sgmltag>Msg</sgmltag> or a set of <sgmltag>Msg</sgmltag>s in a 
<sgmltag>MsgEntry</sgmltag>.
</para>

<refsect2><title>Processing expectations</title>
<para>
&format.block; &format.csuppress;
</para>
<para>
If a <sgmltag>MsgEntry</sgmltag> contains multiple <sgmltag>Msg</sgmltag>s and
multiple <sgmltag>MsgExplan</sgmltag>s, DocBook makes no assertions about
how they are related.
</para>
<para>
On the whole, the semantics of <sgmltag>MsgSet</sgmltag>
are not clearly defined.
</para>
</refsect2>




&msgexplan.parents.gen;
&msgexplan.children.gen;
</refsect1>
<refsect1><title>Examples</title>

<para>For examples, see
&msgexplan.example.seealso.gen;.</para>
</refsect1>
</refentry>

