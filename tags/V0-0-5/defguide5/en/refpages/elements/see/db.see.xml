<refentry xmlns='http://docbook.org/docbook-ng'
          xmlns:xlink='http://www.w3.org/1999/xlink'
          xmlns:xi='http://www.w3.org/2001/XInclude'>
<info>
  <pubdate>$Date$</pubdate>
  <releaseinfo>$Revision$</releaseinfo>
</info>

<refmeta>
  <refentrytitle><?tdg-refentrytitle?></refentrytitle>
  <refmiscinfo role='element'>see</refmiscinfo>
  <refmiscinfo role='pattern'>db.see</refmiscinfo>
</refmeta>

<refnamediv>
  <refname><?tdg-refname?></refname>
  <refpurpose><?tdg-refpurpose?></refpurpose>
</refnamediv>

<?tdg-refsynopsisdiv?>

<refsection condition='ref.description'>
<title>Description</title>


<para>The use of <tag>See</tag> in an <tag>IndexTerm</tag> indicates that
the reader should be directed elsewhere in the index if they attempt
to look up this term.
</para>

<para>The content of <tag>See</tag> identifies another term in the
index which the reader should consult <emphasis>instead</emphasis> of
the current term.
</para>

<refsection><title>Processing expectations</title>
<para><?tdg gentext='format.suppress'?>
This element provides data for processing but it
is not rendered in the primary flow of text.
</para>
<para>It is possible for multiple <tag>IndexTerm</tag>s, taken together,
to form an illogical index.  For example, given the following
<tag>IndexTerm</tag>s:

<screen>
<![CDATA[
<indexterm><primary>Extensible Markup Language</primary>
  <see>XML</see></indexterm>
<indexterm><primary>Extensible Markup Language</primary>
  <secondary>definition of</secondary>
</indexterm>
]]>
</screen>
</para>
<para>there's no way to construct a logical index because an entry in
the index should never have both a <tag>see</tag> and other
content.
</para>
<para>DocBook cannot detect these errors. You will have to rely on an
external process to find them.
</para>
</refsection>

<?tdg-attributes?>
<?tdg-parents?>
<?tdg-children?>

</refsection>

<?tdg-seealso?>

<!-- FIXME: add examples -->

</refentry>
