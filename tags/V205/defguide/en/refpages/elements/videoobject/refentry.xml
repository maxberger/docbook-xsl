<refentry id="videoobject.element" revision='3.1'>
<?dbhtml filename="videoobject.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>videoobject</secondary></indexterm>
<refentrytitle>videoobject</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>videoobject</refname>
<refpurpose>&videoobject.purpose;</refpurpose>
</refnamediv>

&videoobject.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
A <sgmltag>VideoObject</sgmltag> is a wrapper containing <sgmltag>VideoData</sgmltag>
and its associated meta-information.
</para>

<refsect2><title>Processing expectations</title>
<para>
&format.context; It might not be rendered at all, depending on its placement
within a <sgmltag>MediaObject</sgmltag> or <sgmltag>InlineMediaObject</sgmltag> and
the constraints on the publishing system.  For a more detailed description
of the semantics involved, see <sgmltag>MediaObject</sgmltag>.
</para>
</refsect2> 


&videoobject.parents.gen;
&videoobject.children.gen;
</refsect1>
<refsect1 condition='ref.elem.seealso'><title>See Also</title>
&videoobject.seealso.gen;
</refsect1>
<refsect1><title>Examples</title>

<informalexample role="example-source">
<programlisting>&videoobject.example.1.txt;</programlisting>
</informalexample>

<anchor id="ex.os.videoobject.1" role="HACK-ex.out.start"/>
&videoobject.example.1.gen;
<anchor id="ex.oe.videoobject.1" role="HACK-ex.out.end"/>

</refsect1>
</refentry>

