<refentry id="refclass.element">
<?dbhtml filename="refclass.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>refclass</secondary></indexterm>
<refentrytitle>refclass</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>refclass</refname>
<refpurpose>&refclass.purpose;</refpurpose>
</refnamediv>

&refclass.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
The <sgmltag>RefClass</sgmltag> element describes the applicability or scope
of a <sgmltag>RefEntry</sgmltag>.  A <sgmltag>RefClass</sgmltag> might indicate that
the entry was only applicable to a particular application, for example,
or only to a particular vendor&rsquo;s operating system.
</para>

<refsect2><title>Processing expectations</title>
<para>
&format.context; &format.csuppress;
</para>
<para>
Formatting reference pages may require a fairly sophisticated
processing system.  Much of the meta-information about a
reference page (its name, type, purpose, title, and
classification) is stored in wrappers near the beginning of
the <sgmltag>RefEntry</sgmltag>.
</para>
<para>
Common presentational features, such as titles and running
heads, may require data from several of these wrappers plus
some generated text. Other formatting often requires that
these elements be reordered.
</para>
</refsect2>


&refclass.parents.gen;
&refclass.children.gen;
</refsect1>
<refsect1><title>Examples</title>

<para>For examples, see
&refclass.example.seealso.gen;.</para>
</refsect1>
</refentry>

