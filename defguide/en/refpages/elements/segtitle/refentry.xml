<refentry id="segtitle.element">
<?dbhtml filename="segtitle.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>segtitle</secondary></indexterm>
<refentrytitle>segtitle</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>segtitle</refname>
<refpurpose>&segtitle.purpose;</refpurpose>
</refnamediv>

&segtitle.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
Each heading in a <sgmltag>SegmentedList</sgmltag> is contained in its own
<sgmltag>SegTitle</sgmltag>.
</para>
<para>
The relationship between <sgmltag>SegTitle</sgmltag>s and
<sgmltag>Seg</sgmltag>s is implicit in the document; the first
<sgmltag>SegTitle</sgmltag> goes with the first <sgmltag>Seg</sgmltag> in each
<sgmltag>SegListItem</sgmltag>, the second <sgmltag>SegTitle</sgmltag> goes
with the second <sgmltag>Seg</sgmltag>, and so on.
</para>

<refsect2><title>Processing expectations</title>
<para>
Segmented lists can be formatted in a number of ways.  Two popular
formats are tabular and as list of repeated headings and elements.
In a tabular presentation, each <sgmltag>SegTitle</sgmltag> is a column
heading.
In the list presentation, each <sgmltag>SegTitle</sgmltag> is repeated
before the corresponding <sgmltag>Seg</sgmltag>.
</para>
</refsect2> 

<refsect2 role='fu' revision="4.0"><title>&FutureChanges;</title>
<para>
<!--do not index this occurance-->
&fu.interfacedefinition;
</para>
</refsect2>


&segtitle.parents.gen;
&segtitle.children.gen;
</refsect1>
<refsect1><title>Examples</title>

<para>For examples, see
&segtitle.example.seealso.gen;.</para>
</refsect1>
</refentry>

