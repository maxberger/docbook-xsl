<refentry id="sect1.element">
<?dbhtml filename="sect1.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>sect1</secondary></indexterm>
<refentrytitle>sect1</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>sect1</refname>
<refpurpose>&sect1.purpose;</refpurpose>
</refnamediv>

&sect1.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
<sgmltag>Sect1</sgmltag> is one of the top-level sectioning elements in
a component.  There are three types of sectioning elements in
DocBook:
</para>

<itemizedlist>
<listitem><para>
Explicitly numbered sections, <sgmltag>Sect1</sgmltag>&hellip;<sgmltag>Sect5</sgmltag>,
which must be properly nested and can only be five levels deep.
</para></listitem>
<listitem><para>
Recursive <sgmltag>Section</sgmltag>s, which are alternative to the numbered
sections and have unbounded depth.
</para></listitem>
<listitem><para>
<sgmltag>SimpleSect</sgmltag>s, which are terminal.  <sgmltag>SimpleSect</sgmltag>s can
occur as the <quote>leaf</quote> sections in either recursive sections or any
of the numbered sections, or directly in components.
</para></listitem>
</itemizedlist>

<para>
None of the sectioning elements is allowed to <quote>float</quote> in
a component. You can place paragraphs and other block elements
before a section, but you cannot place anything after it.
</para>

<para>
This means that you cannot have content in the <sgmltag>Sect1</sgmltag>
after the end of a <sgmltag>Sect2</sgmltag>.  This is consistent with
the DocBook book model, because in a printed book it is usually
impossible for a reader to detect the end of the enclosed
second level section and, therefore, all content after a second
level section appears in that section.
</para>

<refsect2><title>Processing Expectations</title>
<para>
&format.block; Sometimes sections are numbered.
</para>
</refsect2>

<refsect2 role='fu' revision="4.0"><title>&FutureChanges;</title>
<para>
<indexterm><primary>DocBook DTD</primary><secondary>Changes for <acronym>V4.0</acronym></secondary>
</indexterm>
In DocBook <acronym>V4.0</acronym>, the <sgmltag>ToC</sgmltag> element in the content model
will be replaced by <sgmltag>TocChap</sgmltag>.
</para>
</refsect2>


&sect1.parents.gen;
&sect1.children.gen;
</refsect1>
<refsect1 condition='ref.elem.attrdesc'><title>Attributes</title>
<variablelist>
<varlistentry><term>label</term>
<listitem>
<para>
<sgmltag class='attribute'>Label</sgmltag> specifies an identifying string for presentation purposes.
</para>
<para>
Generally, an explicit <sgmltag class='attribute'>Label</sgmltag> attribute is
used only if the processing system is incapable of generating the label
automatically. If present, the <sgmltag class='attribute'>Label</sgmltag> 
is normative; it will used even
if the processing system is capable of automatic labelling.
</para>
</listitem>
</varlistentry>
<varlistentry><term>renderas</term>
<listitem>
<para>
The <sgmltag class="attribute">RenderAs</sgmltag> attribute identifies how the
section should be rendered. In this way, a section at one level of the
structural hierarchy can be made to appear to be at another level.
</para>
</listitem>
</varlistentry>
<varlistentry><term>status</term>
<listitem>
<para>
<sgmltag class="attribute">Status</sgmltag> identifies the editorial or publication 
status of the <sgmltag>Sect1</sgmltag>.
</para>
<para>
Publication status might be used to control formatting (for example,
printing a <quote>draft</quote> watermark on drafts) or processing (perhaps
a document with a status of <quote>final</quote> should not include any
components that are not final).
</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 condition='ref.elem.seealso'><title>See Also</title>
&sect1.seealso.gen;
</refsect1>
<refsect1><title>Examples</title>

&sect1.example.seealso.gen;
</refsect1>
</refentry>

