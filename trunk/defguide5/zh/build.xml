<?xml version="1.0" encoding="UTF-8"?>
<!--
Usage:
    Building 'The Definitive Guide (5.0)' - all(html, chm & pdf)
        $ ant

    Building 'The Definitive Guide (5.0)' - html
        $ ant html

    Building 'The Definitive Guide (5.0)' - chm
        $ ant chm

    Building 'The Definitive Guide (5.0)' - pdf
        $ ant pdf

Dependency:
    *) ant 1.7
    *) beanshell 2.0b4
    *) xsltproc 1.1.20
    *) jdk 1.4.2
    *) saxon 6.5 & 8.9
    *) DocBook v5 XSL 1.73.2
    *) RELAX NG Support(jing)
    *) python 2.4.4
    *) python-libxml2 2.6.27
    *) gettext 0.16.1
    *) fop 0.20.5, pdf only
    *) chinese font files, pdf only
    *) For windows user, you can download gettext & xsltproc binary from:
        http://i18n-zh.googlecode.com/files/gettext-0.16.1_xsltproc-1.1.20.tar.bz2
-->
<project name="defguide5-zh" default="all">

    <property file="../build-common.properties"/>
    <import file="../build-common.xml"/>

    <taskdef name="jing" classname="com.thaiopensource.relaxng.util.JingTask"/>

    <target name="usage">
        <echo message="Use the -projecthelp option instead"/>
    </target>

    <target name="clean" description="Clean the build directory">
        <delete dir="build"/>
        <delete file="stylesheets/chm-import.xsl"/>
        <delete file="stylesheets/fo-import.xsl"/>
        <delete file="stylesheets/html-import.xsl"/>
        <delete dir="../en/build"/>
        <delete file="../en/bookinfo.xml"/>
        <!-- dir="../en" target="clean"/ -->
    </target>

    <target name="init" depends="init-avail" description="Check runtime class"/>

    <target name="validate" depends="xinclude" description="Validate document">
        <jing rngfile="${docbook5.home}/rng/docbook.rng"
                file="../en/build/defguide5.xml"/>
        <!-- Don't uncomment this unless xml2po support namespace ! -->
        <!--jing rngfile="${docbook5.home}/rng/docbook.rng"
                file="../en/build/defguide5-zh_CN.xml"/-->
    </target>

    <target name="all" description="Generate document - html,chm,pdf">
        <antcall target="html"/>
        <antcall target="pdf"/>
    </target>

    <target name="xinclude" description="XInclude processing on document">
        <ant dir="../en" target="xinclude"/>
    </target>

    <target name="pot.init">
        <uptodate property="pot.isUpToDate" targetfile="po/defguide5.pot">
            <srcfiles dir="../en" includes="book.xml, VERSION.xml"/>
            <srcfiles dir="../en/src" includes="*.xml"/>
            <srcfiles dir="../en/refpages" includes="intro-elements.xml, references.xml"/>
        </uptodate>
    </target>

    <target name="pot" depends="xinclude,pot.init" unless="pot.isUpToDate" description="Generate document - pot">
        <!--fail>
            <condition>
                <or>
                    <os family="windows"/>
                </or>
            </condition>
            This target known work on unix, not windows !
        </fail-->

        <echo message="Making defguide5.pot ..."/>
        <exec dir="${basedir}" executable="python">
            <arg value="xml2po.py"/>
            <arg value="-o"/>
            <arg value="po/defguide5.pot"/>
            <arg value="../en/build/defguide5.xml"/>
        </exec>

        <echo message="Merging zh_CN.po ..."/>
        <exec dir="${basedir}" executable="msgmerge">
            <arg value="--no-wrap"/>
            <arg value="-o"/>
            <arg value="po/zh_CN.po.new"/>
            <arg value="po/zh_CN.po"/>
            <arg value="po/defguide5.pot"/>
        </exec>
        <move file="po/zh_CN.po.new" tofile="po/zh_CN.po"/>
    </target>

    <target name="translate.init" depends="pot">
        <uptodate property="translate.isUpToDate" targetfile="../en/build/defguide5-zh_CN.xml">
            <srcfiles dir="../en" includes="book.xml, VERSION.xml"/>
            <srcfiles dir="../en/src" includes="*.xml"/>
            <srcfiles dir="../en/refpages" includes="intro-elements.xml, references.xml"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="translate" depends="translate.init" unless="translate.isUpToDate" description="Translate document">
        <echo message="Translating defguide5-zh_CN.xml ..."/>
        <exec dir="${basedir}" executable="python">
            <arg value="xml2po.py"/>
            <arg value="-l"/>
            <arg value="zh-cn"/>
            <arg value="-p"/>
            <arg value="po/zh_CN.po"/>
            <arg value="-o"/>
            <arg value="../en/build/defguide5-zh_CN-tmp.xml"/>
            <arg value="../en/build/defguide5.xml"/>
        </exec>
        <exec dir="${basedir}/build" executable="xmllint">
            <arg value="--encode"/>
            <arg value="UTF-8"/>
            <arg value="--output"/>
            <arg value="defguide5-zh_CN.xml"/>
            <arg value="--format"/>
            <arg value="defguide5-zh_CN-tmp.xml"/>
        </exec>
        <delete file=".xml2po.mo"/>
        <delete file="build/defguide5-zh_CN-tmp.xml"/>
    </target>

    <target name="html.init">
        <uptodate property="html.isUpToDate" targetfile="build/html/.done">
            <srcfiles dir="../en" includes="book.xml, VERSION.xml"/>
            <srcfiles dir="../en/src" includes="*.xml"/>
            <srcfiles dir="../en/refpages" includes="intro-elements.xml, references.xml"/>
            <srcfiles dir="../en/refpages/elements" includes="*/*.xml" excludes="build/*"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="html" depends="translate,html.init" unless="html.isUpToDate" description="Generate document - html">

        <copy file="stylesheets/defguide.css" todir="build/html"/>
        <copy todir="build/html/figures">
            <fileset dir="../en/figures" includes="*.png,*.git,*.eps"/>
        </copy>

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/html-import.tmpl.xsl" tofile="stylesheets/html-import.xsl" filtering="true" overwrite="true"/>

        <echo message="Making html ..."/>
        <exec dir="${basedir}${file.separator}build${file.separator}html" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="../../stylesheets/html.xsl"/>
            <arg value="../../../en/build/defguide5-zh_CN.xml"/>
        </exec>
        <touch file="build/html/.done"/>
    </target>

    <target name="chm.init">
        <uptodate property="chm.isUpToDate" targetfile="build/defguide5-zh_CN.chm">
            <srcfiles dir="../en" includes="book.xml, VERSION.xml"/>
            <srcfiles dir="../en/src" includes="*.xml"/>
            <srcfiles dir="../en/refpages" includes="intro-elements.xml, references.xml"/>
            <srcfiles dir="../en/refpages/elements" includes="*/*.xml" excludes="build/*"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="chm" depends="translate,chm.init" unless="chm.isUpToDate" description="Generate document - chm">
        <fail>
            <condition>
                <not><os family="windows"/></not>
            </condition>
            This target only known work on windows !
        </fail>

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/chm-import.tmpl.xsl" tofile="stylesheets/chm-import.xsl" filtering="true" overwrite="true"/>

        <copy file="stylesheets/defguide.css" todir="build/htmlhelp"/>
        <copy todir="build/htmlhelp/figures">
            <fileset dir="../en/figures" includes="*.png"/>
        </copy>
        <copy todir="build/htmlhelp/images">
            <fileset dir="${docbook5.xsl}/images" includes="*.git,*.png,*.tif,*.svg"/>
        </copy>

        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${basedir}${file.separator}build"
                 failonerror="true" maxmemory="512m">
            <classpath refid="lib.classpath"/>
            <arg value="../../en/build/defguide5-zh_CN.xml"/>
            <arg value="../stylesheets/chm.xsl"/>
        </java>

        <!--exec dir="${basedir}${file.separator}build" executable="xsltproc" failonerror="true">
            <arg value="- -nonet"/>
            <arg value="../stylesheets/chm.xsl"/>
            <arg value="../../en/build/defguide5-zh_CN.xml"/>
        </exec-->

        <exec dir="${basedir}${file.separator}build" executable="hhc" failonerror="false">
            <arg value="htmlhelp.hhp"/>
        </exec>

        <!--delete dir="build/htmlhelp"/>
        <delete file="build/toc.hhc"/>
        <delete file="build/index.hhk"/>
        <delete file="build/htmlhelp.hhp"/-->
    </target>

    <target name="pdf.init">
        <uptodate property="pdf.isUpToDate" targetfile="build/defguide5-zh_CN.pdf">
            <srcfiles dir="../en" includes="book.xml, VERSION.xml"/>
            <srcfiles dir="../en/src" includes="*.xml"/>
            <srcfiles dir="../en/refpages" includes="intro-elements.xml, references.xml"/>
            <srcfiles dir="../en/refpages/elements" includes="*/*.xml" excludes="build/*"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="pdf" depends="translate,pdf.init" unless="pdf.isUpToDate"  description="Generate document - html">

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/fo-import.tmpl.xsl" tofile="stylesheets/fo-import.xsl" filtering="true" overwrite="true"/>

        <echo message="Making fo ..."/>
        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${basedir}"
                 failonerror="true" maxmemory="512m">
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="build/pdf/defguide5-zh_CN.fo"/>
            <arg value="../en/build/defguide5-zh_CN.xml"/>
            <arg value="stylesheets/zh_CN/fo.xsl"/>
        </java>

        <copy todir="build/pdf/figures">
            <fileset dir="../en/figures" includes="*.png,*.git,*.eps"/>
        </copy>
        <copy todir="build/pdf/images">
            <fileset dir="${docbook5.xsl}/images" includes="*.git,*.png,*.tif,*.svg"/>
        </copy>

        <copy todir="build/pdf">
            <fileset dir="${fonts.dir}">
                <include name="*.ttf"/>
                <include name="*.ttc"/>
            </fileset>
            <fileset dir="${fop.home}/conf">
                <include name="*.xml"/>
            </fileset>
            <fileset file="build/defguide5-zh_CN.fo"/>
        </copy>

        <echo message="Making pdf ..."/>
        <java classname="${fop.class}" fork="true" maxmemory="512m"
                dir="${basedir}${file.separator}build${file.separator}pdf">
            <classpath refid="lib.classpath"/>
            <arg value="-c"/>
            <arg value="userconfig.xml"/>
            <arg value="defguide5-zh_CN.fo"/>
            <arg value="../defguide5-zh_CN.pdf"/>
        </java>

        <delete dir="build/pdf"/>
    </target>

</project>
