<refentry xmlns='http://docbook.org/docbook-ng'
          xmlns:xlink='http://www.w3.org/1999/xlink'
          xmlns:xi='http://www.w3.org/2001/XInclude'>
<info>
  <pubdate>$Date$</pubdate>
  <releaseinfo>$Revision$</releaseinfo>
</info>

<refmeta>
  <refentrytitle><?tdg-refentrytitle?></refentrytitle>
  <refmiscinfo role='element'>synopfragmentref</refmiscinfo>
  <refmiscinfo role='pattern'>db.synopfragmentref</refmiscinfo>
</refmeta>

<refnamediv>
  <refname><?tdg-refname?></refname>
  <refpurpose><?tdg-refpurpose?></refpurpose>
</refnamediv>

<?tdg-refsynopsisdiv?>

<refsection condition='ref.description'>
<title>Description</title>


<para>A complex <tag>CmdSynopsis</tag> can be made more manageable
with <tag>SynopFragment</tag>s.  Rather than attempting to
present the entire synopsis in one large
piece, parts of the synopsis can be extracted out and presented
elsewhere. 
</para>
<para>At the point where each piece was extracted, insert a
<tag>SynopFragmentRef</tag> that points to the fragment. The
content of the <tag>SynopFragmentRef</tag> will be presented inline.
</para>
<para>The extracted pieces are placed in <tag>SynopFragment</tag>s
at the end of the <tag>CmdSynopsis</tag>.
</para>
<note>
<para>The content model of <tag>SynopFragmentRef</tag> is unique in
the <acronym>SGML</acronym> version of DocBook because it contains <literal>RCDATA</literal>
declared content. What this means is that all markup inside a
<tag>SynopFragmentRef</tag> is ignored, except for entity references.
</para>
<para>How, you might ask, is this different from a content model that
includes only <literal>#PCDATA</literal>?  The difference is only
apparent when you consider inclusions.  Recall that an inclusion
provides a list of elements that can occur <emphasis>anywhere</emphasis>
inside an element.  So, for example, the fact that
<tag>Chapter</tag> lists <tag>IndexTerm</tag> as an inclusion
means that <tag>IndexTerm</tag> can legally occur inside of a
<tag>SynopFragmentRef</tag> that's nested inside a chapter,
even if the content model of <tag>SynopFragmentRef</tag> does
not explicitly allow <tag>IndexTerm</tag>s. Making the content
<literal>RCDATA</literal> ensures that the markup will not be recognized,
even if it's allowed by inclusion. A neat trick.
</para>
<para><acronym>XML</acronym> does not support <literal>RCDATA</literal>.
</para>
</note>

<refsection><title>Processing expectations</title>
<para><?tdg gentext='format.block'?>

</para>
<para>The presentation system is responsible for generating text that
makes the reader aware of the link. This can be done with
numbered bullets, or any other appropriate mechanism.
</para>
<para>Online systems have additional flexibility. They may generate
hot links between the references and the fragments, for example,
or place the fragments in pop-up windows.
</para>
</refsection>


<?tdg-attributes?>
<?tdg-parents?>
<?tdg-children?>

</refsection>

<?tdg-seealso?>

<!-- FIXME: add examples -->

</refentry>
