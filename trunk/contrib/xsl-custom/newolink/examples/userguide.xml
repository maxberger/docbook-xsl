<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article SYSTEM "../../docbook412/docbookx.dtd" [
<!ENTITY % local.olink.attrib
	"targetdoc	CDATA	#IMPLIED
	 targetid	CDATA	#IMPLIED"
>
]>
<article id="publish">
<title>Publishing DocBook Documents</title>
<para>
Creating and editing SGML/XML documents is usually only half the
battle. After you've composed your document, you'll want to publish
it. Publishing, for our purposes, means either print or web
publishing. For SGML and XML documents, this is usually
accomplished with some kind of <glossterm>stylesheet</glossterm>.  In
the (not too distant) future, you may be able to publish an XML
document on the Web by simply putting it online with a stylesheet, but
for now you'll probably have to translate your document into HTML.
</para>
<para>
Stylesheets provide the means for converting your documents
to HTML. You can use the stock stylesheets, or your can
customize them to meet your particular needs.
For example, if you have a CSS stylesheet you always want to be
used by your published HTML files, then you can set the
<olink type="stylesheet"
            targetdoc="ref"
	    targetid="param.html.stylesheet">
html.stylesheet</olink> parameter in the XSL stylesheet
to the name of your CSS stylesheet.
You will also want to set the stylesheet type
using the 
<olink type="stylesheet"
	    targetdoc="ref"
	    targetid="param.html.stylesheet.type"/>
parameter.
</para>
<para>
There are many ways, using both free and commercial tools, to publish
SGML documents. In this chapter, we're going to survey a number of
possibilities, and then look at just one solution in detail: <ulink url="http://www.jclark.com/jade/">Jade</ulink> and the <ulink url="http://nwalsh.com/docbook/dsssl/">Modular DocBook
Stylesheets.</ulink> We used jade to produce this
book and to produce the online versions on the
<acronym>CD-ROM</acronym>; it is also being deployed in other projects
such as <ulink url="http://www.sgmltools.org/"><literal>&lt;SGML&gt;&amp;tools;</literal>,</ulink>
which originated with the Linux Documentation Project.
</para>
<para>
For a brief survey of other tools, see elsewhere.
</para>
<section id="stylesheet.languages"><title>A Survey of Stylesheet Languages</title>
<para>
Over the years, a number of attempts have been made to produce a
standard stylesheet language and, failing that, a large number of
proprietary languages have been developed.
</para>
<variablelist>
<varlistentry><term>FOSIs</term>
<listitem>
<para>
First, the U.S. Department of Defense, in an attempt to
standardize stylesheets across military branches, created the
<citetitle>Output Specification</citetitle>, which is defined in
<acronym>MIL-PRF-28001C</acronym>, <citetitle>Markup Requirements and
Generic Style Specification for Electronic Printed Output and Exchange
of Text</citetitle>.<footnote>
<para>
See <citetitle><ulink url="http://www-cals.itsi.disa.mil/core/formal/fps.htm">Formally
Published CALS Standards</ulink></citetitle> for more information.
</para>
</footnote>
</para>
<para>
Commonly called FOSIs (for Formatting Output Specification Instances),
they are supported by a few products including ADEPT Publisher by
<ulink url="http://www.arbortext.com/">Arbortext</ulink> and DL
Composer by <ulink url="http://www.datalogics.com/">Datalogics</ulink>.
</para>
</listitem>
</varlistentry>
<varlistentry><term>DSSSL</term>
<listitem>
<para>
Next, the International Organization for Standardization
(<acronym>ISO</acronym>) created <acronym>DSSSL</acronym>, the
Document Style Semantics and Specification Language. Subsets of
<acronym>DSSSL</acronym> are supported by Jade and a few other tools,
but it never achieved widespread support.
</para>
</listitem>
</varlistentry>
<varlistentry><term>CSS</term>
<listitem>
<para>
The <acronym>W3C</acronym> CSS Working Group created
<acronym>CSS</acronym> as a style attachment language for HTML, and,
more recently, XML.
</para>
</listitem>
</varlistentry>
<varlistentry><term>XSL</term>
<listitem>
<para>
Most recently, the XML effort has identified a standard Extensible Style
Language (<acronym>XSL</acronym>) as a requirement. The
<acronym>W3C</acronym> <acronym>XSL</acronym> Working Group is
currently pursuing that effort.
</para>
</listitem>
</varlistentry>
</variablelist>
<section><title>Stylesheet Examples</title>
<para>
By way of comparison, here's an example of each of the standard style
languages. In each case, the stylesheet fragment shown contains the
rules that reasonably formatted the following paragraph:
</para>
<screen>
&lt;para>
This is an example paragraph. It should be presented in a
reasonable body font. &lt;emphasis>Emphasized&lt;/emphasis> words
should be printed in italics. A single level of 
&lt;emphasis>Nested &lt;emphasis>emphasis&lt;/emphasis> should also
be supported.&lt;/emphasis>
&lt;/para>
</screen>
<section id="fosi-stylesheets">
<title><acronym>FOSI</acronym> stylesheet</title>
<para>
<acronym>FOSI</acronym>s are SGML documents. The element in the
<acronym>FOSI</acronym> that controls the presentation of specific
elements is the <sgmltag>e-i-c</sgmltag> (element in context) element.
A sample <acronym>FOSI</acronym> fragment is shown in <xref linkend="ex-fosi"/>.
</para>
<example id="ex-fosi">
<title>A Fragment of a <acronym>FOSI</acronym> Stylesheet</title>
<programlisting><inlinegraphic fileref="examples/style-fosi.txt"/></programlisting>
</example>
</section>
<section id="dsssl-stylesheets"><title><acronym>DSSSL</acronym> stylesheet</title>
<para>
<acronym>DSSSL</acronym> stylesheets are written in a Scheme-like
language (see &ldquo;Scheme&rdquo; later in this chapter). It is the
<function>element</function> function that controls the presentation of
individual elements. See the example in <xref linkend="ex-dsssl"/>.
</para>
<example id="ex-dsssl">
<title>A Fragment of a <acronym>DSSSL</acronym> Stylesheet</title>
<programlisting><inlinegraphic fileref="examples/style-dsssl.txt"/></programlisting>
</example>
</section>
<section id="css-stylesheets"><title><acronym>CSS</acronym> stylesheet</title>
<para>
<acronym>CSS</acronym> stylesheets consist of selectors and formatting
properties, as shown in <xref linkend="ex-css"/>.
</para>
<example id="ex-css">
<title>A Fragment of a <acronym>CSS</acronym> Stylesheet</title>
<programlisting><inlinegraphic fileref="examples/style-css.txt"/></programlisting>
</example>
</section>
<section id="xsl-stylesheets"><title><acronym>XSL</acronym> stylesheet</title>
<para>
<acronym>XSL</acronym> stylesheets are XML documents, as shown in
<xref linkend="ex-xsl"/>. The element in the <acronym>XSL</acronym>
stylesheet that controls the presentation of specific elements is the
<sgmltag>xsl:template</sgmltag> element.
</para>
<example id="ex-xsl">
<title>A Fragment of an <acronym>XSL</acronym> Stylesheet</title>
<programlisting><inlinegraphic fileref="examples/style-xsl.txt"/></programlisting>
</example>
</section>
</section>
</section>
</article>
