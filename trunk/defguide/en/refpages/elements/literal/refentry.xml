<refentry id="literal.element">
<?dbhtml filename="literal.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>literal</secondary></indexterm>
<refentrytitle>literal</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>literal</refname>
<refpurpose>&literal.purpose;</refpurpose>
</refnamediv>

&literal.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
A <sgmltag>Literal</sgmltag> is some specific piece of data, taken literally, from
a computer system.  It is similar in some ways to <sgmltag>UserInput</sgmltag> and
<sgmltag>ComputerOutput</sgmltag>, but is somewhat more of a general
classification. The sorts of things that constitute literals varies by domain.
</para>

<refsect2><title>Processing expectations</title>
<para>
&format.inline; A literal is frequently distinguished
typographically and <sgmltag>Literal</sgmltag> is often used wherever
that typographic presentation is desired.
</para>
<para>
&pexp.moreinfo;
</para>
</refsect2>

<refsect2 role='fu' revision="4.0"><title>&FutureChanges;</title>
<para>
<indexterm><primary>DocBook DTD</primary><secondary>Changes for <acronym>V4.0</acronym></secondary>
</indexterm>
The content model of <sgmltag>Literal</sgmltag> will be constrained to
<literal>(#PCDATA | Replaceable | InlineGraphic)</literal> in
DocBook <acronym>V4.0</acronym>.
</para>
</refsect2>


&literal.parents.gen;
&literal.children.gen;
</refsect1>
<refsect1 condition='ref.elem.attrdesc'><title>Attributes</title>
<variablelist>
<varlistentry><term>moreinfo</term>
<listitem>
<para>
If <sgmltag class='attribute'>MoreInfo</sgmltag> is set to <literal>RefEntry</literal>,
it implies that a <sgmltag>RefEntry</sgmltag> exists which further describes the
<sgmltag>Literal</sgmltag>.
</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 condition='ref.elem.seealso'><title>See Also</title>
&literal.seealso.gen;
</refsect1>
<refsect1><title>Examples</title>

<informalexample role="example-source">
<programlisting>&literal.example.1.txt;</programlisting>
</informalexample>

<anchor id="ex.os.literal.1" role="HACK-ex.out.start"/>
&literal.example.1.gen;
<anchor id="ex.oe.literal.1" role="HACK-ex.out.end"/>

&literal.example.seealso.gen;
</refsect1>
</refentry>

