<?xml version="1.0" encoding="UTF-8"?>
<!--
Usage:
    Building 'The Definitive Guide' - all(html, chm & pdf)
        $ ant

    Building 'The Definitive Guide' - html
        $ ant html

    Building 'The Definitive Guide' - chm
        $ ant chm

    Building 'The Definitive Guide' - pdf
        $ ant pdf

Dependency:
    *) ant 1.7
    *) libxml2 2.6.30
    *) xsltproc 1.1.22
    *) jdk 1.6(1.4.2 & 1.5 has a unfixed java.lang.StackOverflowError for PDF!)
    *) saxon 6.5
    *) DocBook v5 XSL
    *) RELAX NG Support(jing)
    *) python 2.4
    *) python-libxml2 2.6.27
    *) gettext 0.16
    *) fop 0.20.5, pdf only
    *) chinese font files, pdf only
    *) For windows user, you can download gettext & xsltproc binary from:
        http://i18n-zh.googlecode.com/files/gettext_0.16.1_xsltproc_1.1.22.tar.bz2

Status:
                    PDF     HTML    CHM
    JavaSE 1.4      FAIL    OK      FAIL
    JavaSE 1.5      FAIL    OK      FAIL
    JavaSE 1.6      OK      OK      FAIL
    xsltproc        X       OK      OK
-->
<project name="defguide" default="all">

    <property file="build.properties"/>

    <path id="lib.classpath">
        <fileset dir="${ant.home}/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${fop.home}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${usr.share.java}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef name="jing" classname="com.thaiopensource.relaxng.util.JingTask"/>

    <target name="usage">
        <echo message="Use the -projecthelp option instead"/>
    </target>

    <target name="clean" description="Clean the build directory">
        <delete dir="build"/>
        <delete file="stylesheets/chm-import.xsl"/>
        <delete file="stylesheets/fo-import.xsl"/>
        <delete file="stylesheets/html-import.xsl"/>
    </target>

    <target name="init" description="Check runtime class">
        <condition property="rng.present">
            <and>
                <available classname="com.thaiopensource.relaxng.util.Driver"/>
            </and>
        </condition>
        <fail message="RELAX NG Support(jing) NOT Present !" unless="rng.present"/>

        <condition property="saxon.present">
            <and>
                <available classname="com.icl.saxon.StyleSheet" classpathref="lib.classpath"/>
            </and>
        </condition>
        <fail message="Saxon 6.5 Support NOT Present !" unless="saxon.present"/>

        <echo message="java.version: ${java.version}"/>
    </target>

    <target name="validate" depends="init" description="Validate document">
        <jing rngfile="${docbook5.home}/rng/docbook.rng" file="source/defguide.xml"/>
        <!--Don't uncomment this unless xml2po support namespace !-->
        <!--jing rngfile="${docbook5.home}/rng/docbook.rng"
                file="build/defguide-zh_CN.xml"/-->
    </target>

    <target name="all" description="Generate document - html,chm,pdf">
        <antcall target="html"/>
        <antcall target="pdf"/>
        <antcall target="chm"/>
    </target>

    <target name="pot.init">
        <uptodate property="pot.isUpToDate" targetfile="po/defguide.pot">
            <srcfiles dir="source" includes="defguide.xml"/>
        </uptodate>
    </target>

    <target name="pot" depends="pot.init" unless="pot.isUpToDate" description="Generate document - pot">
        <echo message="Making defguide.pot ..."/>
        <exec dir="${basedir}/po" executable="python" failonerror="true">
            <arg value="../xml2po/xml2po.py"/>
            <arg value="-o"/>
            <arg value="defguide.pot"/>
            <arg value="../source/defguide.xml"/>
        </exec>

        <echo message="Merging zh_CN.po ..."/>
        <exec dir="${basedir}" executable="msgmerge">
            <arg value="--no-wrap"/>
            <arg value="-o"/>
            <arg value="po/zh_CN.po.new"/>
            <arg value="po/zh_CN.po"/>
            <arg value="po/defguide.pot"/>
        </exec>
        <move file="po/zh_CN.po.new" tofile="po/zh_CN.po"/>
    </target>

    <target name="translate.init" depends="pot">
        <uptodate property="translate.isUpToDate" targetfile="build/defguide-zh_CN.xml">
            <srcfiles dir="source" includes="defguide.xml"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="translate" depends="translate.init" unless="translate.isUpToDate" description="Translate document">
        <mkdir dir="build"/>
        <echo message="Translating defguide-zh_CN.xml ..."/>
        <exec dir="${basedir}/xml2po" executable="python" failonerror="true">
            <arg value="xml2po.py"/>
            <arg value="-l"/>
            <arg value="zh-cn"/>
            <arg value="-p"/>
            <arg value="../po/zh_CN.po"/>
            <arg value="-o"/>
            <arg value="../build/defguide-zh_CN-tmp.xml"/>
            <arg value="../source/defguide.xml"/>
        </exec>
        <exec dir="${basedir}/build" executable="xmllint">
            <arg value="--format"/>
            <arg value="--output"/>
            <arg value="defguide-zh_CN.xml"/>
            <arg value="defguide-zh_CN-tmp.xml"/>
        </exec>
    <delete file="xml2po/.xml2po.mo"/>
        <delete file="build/defguide-zh_CN-tmp.xml"/>
    </target>

    <target name="html.init">
        <uptodate property="html.isUpToDate" targetfile="build/defguide/.done">
            <srcfiles dir="source" includes="defguide.xml"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="html" depends="init,translate,html.init" unless="html.isUpToDate" description="Generate document - html">
        <copy todir="build/defguide/figures">
            <fileset dir="source/figures" includes="*.png,*.gif,*.eps"/>
        </copy>
        <copy todir="build/examples">
            <fileset dir="../en/examples"/>
        </copy>

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/html-import.tmpl.xsl" tofile="stylesheets/html-import.xsl" filtering="true" overwrite="true"/>

        <echo message="Making html ..."/>
        <!--java classname="com.icl.saxon.StyleSheet" fork="true" maxmemory="512m" failonerror="true" dir="${basedir}/build/defguide">
            <classpath refid="lib.classpath"/>
            <arg value="../defguide-zh_CN.xml"/>
            <arg value="../../stylesheets/zh_CN/html.xsl"/>
        </java-->
        <exec dir="${basedir}/build/defguide" executable="xsltproc" failonerror="true">
            <arg value="--nonet"/>
            <arg value="../../stylesheets/zh_CN/html.xsl"/>
            <arg value="../defguide-zh_CN.xml"/>
        </exec>
        <touch file="build/defguide/.done"/>
    </target>

    <target name="chm.init">
        <uptodate property="chm.isUpToDate" targetfile="build/defguide-zh_CN.chm">
            <srcfiles dir="source" includes="defguide.xml"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="chm" depends="init,translate,chm.init" unless="chm.isUpToDate" description="Generate document - chm">
        <fail>
            <condition>
                <not>
                    <os family="windows"/>
                </not>
            </condition>
            This target only known work on windows !
        </fail>

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/chm-import.tmpl.xsl" tofile="stylesheets/chm-import.xsl" filtering="true" overwrite="true"/>

        <copy todir="build/htmlhelp/figures">
            <fileset dir="source/figures" includes="*.png,*.gif,*.eps"/>
        </copy>
        <copy todir="build/examples">
            <fileset dir="../en/examples"/>
        </copy>
        <copy todir="build/htmlhelp/images">
            <fileset dir="${docbook5.xsl}/images"/>
        </copy>

        <!--Must use GB18030 encoding and xsltproc for chm format !-->
        <echo message="Making chm ..."/>
        <exec dir="${basedir}/build" executable="xmllint">
          <arg value="--encode"/>
          <arg value="GB18030"/>
          <arg value="--format"/>
          <arg value="--output"/>
          <arg value="defguide-zh_CN-GB1803.xml"/>
          <arg value="defguide-zh_CN.xml"/>
        </exec>
        <exec dir="${basedir}/build" executable="xsltproc" failonerror="true">
            <arg value="../stylesheets/zh_CN/chm.xsl"/>
            <arg value="defguide-zh_CN-GB1803.xml"/>
        </exec>
        <exec dir="${basedir}/build" executable="hhc" failonerror="true">
            <arg value="htmlhelp.hhp"/>
        </exec>
        <!--delete dir="build/htmlhelp"/>
        <delete file="build/toc.hhc"/>
        <delete file="build/index.hhk"/>
        <delete file="build/htmlhelp.hhp"/-->
    </target>

    <target name="fo.init">
        <!--Java SE 1.4 & 1.5: Unfixed java.lang.StackOverflowError !-->
        <condition property="java16.present">
            <equals arg1="${ant.java.version}" arg2="1.6"/>
        </condition>
        <fail message="Must use Java SE 6 !" unless="java16.present"/>

        <uptodate property="fo.isUpToDate" targetfile="build/pdf/defguide-zh_CN.fo">
            <srcfiles dir="source" includes="defguide.xml"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
        </uptodate>
    </target>

    <target name="fo" depends="init,translate,fo.init" unless="fo.isUpToDate" description="Generate document - fo">
        <mkdir dir="build/pdf"/>
        <copy todir="build/examples">
            <fileset dir="../en/examples"/>
        </copy>

        <filter token="docbook5.xsl.url" value="${docbook5.xsl.url}"/>
        <copy file="stylesheets/fo-import.tmpl.xsl" tofile="stylesheets/fo-import.xsl" filtering="true" overwrite="true"/>

        <echo message="Making fo ..."/>
        <java classname="com.icl.saxon.StyleSheet" fork="true" maxmemory="1024m" failonerror="true" dir="${basedir}">
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="build/pdf/defguide-zh_CN.fo"/>
            <arg value="build/defguide-zh_CN.xml"/>
            <arg value="stylesheets/zh_CN/fo.xsl"/>
        </java>
    </target>

    <target name="pdf.init">
        <uptodate property="pdf.isUpToDate" targetfile="build/defguide-zh_CN.pdf">
            <srcfiles dir="source" includes="defguide.xml"/>
            <srcfiles dir="po" includes="zh_CN.po"/>
            <srcfiles dir="build/pdf" includes="defguide-zh_CN.fo"/>
        </uptodate>
    </target>

    <target name="pdf" depends="init,translate,fo,pdf.init" unless="pdf.isUpToDate" description="Generate document - pdf">
        <copy todir="build/pdf/figures">
            <fileset dir="source/figures" includes="*.png,*.gif,*.eps"/>
        </copy>
        <copy todir="build/pdf/images">
            <fileset dir="${docbook5.xsl}/images"/>
        </copy>
        <copy todir="build/pdf">
            <fileset dir="${fonts.dir}">
                <include name="*.ttf"/>
                <include name="*.ttc"/>
            </fileset>
            <fileset dir="${fop.home}/conf">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <echo message="Making pdf ..."/>
        <java classname="${fop.class}" fork="true" maxmemory="512m" failonerror="true" dir="${basedir}${file.separator}build${file.separator}pdf">
            <classpath refid="lib.classpath"/>
            <arg value="-c"/>
            <arg value="userconfig.xml"/>
            <arg value="defguide-zh_CN.fo"/>
            <arg value="../defguide-zh_CN.pdf"/>
        </java>
        <delete dir="build/pdf"/>
    </target>

</project>
