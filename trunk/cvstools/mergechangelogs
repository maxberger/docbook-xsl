#!/usr/bin/perl -- # --*-Perl-*--

use Getopt::Std;

$usage = "Usage: $0 [-v version]\n";

die $usage if ! getopts('v:');
$version = $opt_v || &last_version();

# .../docbook must be the current directory

die "Cannot find ChangeLog.\n" if ! -f "ChangeLog";

@dirs = ();
@ldirs = ('.');
while (@ldirs) {
    $dir = shift @ldirs;
    push (@dirs, $dir);

    opendir (DIR, $dir);
    while ($name = readdir(DIR)) {
	$file = "$dir/$name";
	next if $name =~ /^\.\.?$/;
	next if ! -d $file;
	next if $name eq 'CVS';
	next if $name eq 'RCS';
	push (@ldirs, $file);
    }
    closedir (DIR);
}

$found = 0;
open (F, "ChangeLog");
while (<F>) {
    chop;
    $date = $1 if /^(\d+-\d+-\d+)/;
    $found = 1 if /^\s+\* \S+: Version $version/;
    last if $found;
}

if (!$found) {
    warn "Cannot find version $version in ChangeLog\n";
    $date = "0000-00-00";
}

print "Changes since version $version ($date)\n\n";

$date =~ /(\d+)-(\d+)-(\d+)/;
$date = sprintf("%04d%02d%02d", $1, $2, $3);

foreach $dir (@dirs) {
    $found = 0;
    @LINES = ();
    open(F, "$dir/ChangeLog");
    while (<F>) {
	chop;
	if (/^(\d+)-(\d+)-(\d+)/) {
	    $cdate = sprintf("%04d%02d%02d", $1, $2, $3);
	    $found = ($cdate <= $date);
	}

	last if $found;

	push (@LINES, $_);
    }
    close (F);

    next if !@LINES;

    $dir =~ s/^\./docbook/;
    print "Changes to $dir/*\n\n";

    @entry = ();
    foreach $_ (@LINES) {
	if (/^\t/) {
	    push (@entry, $_);
	} else {
	    &format(@entry) if @entry;
	    @entry = ();
	    print "  | $_\n";
	}
    }
    &format(@entry) if @entry;
    print "\n";
}

sub format {
    my @lines = @_;
    local $_ = join(" ", @lines);

    # get rid of leading *
    s/^\t\* //;

    # get rid of tabs
    s/\t/ /sg;

    # get rid of multiple spaces
    s/\s+/ /sg;

    my $star = "*";
    while (length($_) > 60) {
	if (/^(.{1,60})\s/) {
	    print "  | \t$star $1\n";
	    $star = " ";
	    $_ = $';
	} else {
	    print "  | \t$star $_\n";
	    $_ = "";
	}
    }

    print "  | \t$star $_\n" if $_ ne "";
}

sub last_version {
    local $_;
    my $version = undef;

    open (F, 'VERSION') || die "Cannot find VERSION.\n";
    read (F, $_, -s 'VERSION');
    close (F);

    if (/name=.VERSION.>(.*?)</s) {
	$version = $1;
    } else {
	die "Cannot find version in VERSION.\n";
    }

    if ($version =~ /(\d+)\.(\d+)/) {
	my $major = $1;
	my $minor = $2;

	$minor--;

	return "$major.$minor";
    } else {
	return $version;
    }
}
