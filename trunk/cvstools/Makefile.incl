# this file is a -*- makefile -*- snippet
# use it to configure docbook open repository materials build

CVSROOT=/sourceforge/docbook
CVSTOOLSROOT=$(CVSROOT)/cvstools
XSLROOT=$(CVSROOT)/xsl
DSSSLROOT=$(CVSROOT)/dsssl
WEBSITEROOT=$(CVSROOT)/website
CVS2LOG=$(CVSTOOLSROOT)/cvs2log
FLATTEN=$(CVSTOOLSROOT)/flatten
MERGELOGS=$(CVSTOOLSROOT)/mergechangelogs
NEXTVERSION=$(CVSTOOLSROOT)/nextversion
SCHEMATRON-BASIC=$(SCHEMATRON-PATH)/schematron-basic.xsl
SCHEMATRON-PATH=/share/doctypes/schematron
SCHEMATRON-SKELETON=$(SCHEMATRON-PATH)/skeleton1-5.xsl
TIDY=$(CVSTOOLSROOT)/untidy
XJPARSE=$(CVSTOOLSROOT)/xjparse
XNSGMLS=xnsgmls
DTDDISTRIB=$(CVSTOOLSROOT)/dtd-distrib
JADE=$(CVSTOOLSROOT)/runjade
XSLT=$(CVSTOOLSROOT)/xslt
XSLTOPT=
XSLTPROC=
RUNTRANG=$(CVSTOOLSROOT)/runtrang

#-----------------------------------------------------------------
#                VARIABLES FOR RELEASE BUILDS
#-----------------------------------------------------------------
# If you are doing normal (non-release) sandbox builds just for
# your own use, you can ignore all the variables below. They are
# used only when doing release builds.
#-----------------------------------------------------------------

# stylesheet for generating release notes
DOC-LINK-STYLE=   $(DOCBOOK_CVS)/xsl/docsrc/doc-link-docbook.xsl
# browser to use for making text version of release notes
BROWSER=w3m
BROWSER_OPTS=-dump

# the following are used to determine what version to compare to
# in order to create the WhatsNew file
NEXTVER=
DIFFVER=

# how to check to make sure working directory is up to date with CVS
CVSCHECK = $(shell cvs -n update 2>&1 | grep -v ^cvs | cut -c3-)

# remove dots from version number to create CVS tag
TAGVER := $(shell echo "V$(RELVER)" | sed "s/\.//g")

# stuff for "make zip", "make freshmeat", and "make install" targets
TMP=/tmp
# specifies options to feed to "freshmeat-submit"
FMGO=-N
# SFRELID specifies the Sourceforge release ID for the current
# release. Before running "make freshmeat", you need to manually
# create the new release at Sourceforge (via the SF web
# interface), then copy down the release ID in the URI for the
# release
SFRELID=
# specifies with FTP app to use for upload to SF incoming
FTP=lftp
FTP_OPTS=-e
SCP=scp
SCP_OPTS=
SSH=ssh
SSH_OPTS=
SF_UPLOAD_HOST=upload.sf.net
SF_UPLOAD_DIR=incoming
PROJECT_HOST=docbook.sf.net
RELEASE_DIR=/home/groups/d/do/docbook/htdocs/release
PROJECT_USER:=`sed 's/^:.\+:\([^@]\+\)@.\+$$/\1/' CVS/Root`
