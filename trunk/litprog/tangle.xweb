<article xmlns:src="http://nwalsh.com/xmlns/litprog/fragment"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<title>Tangle.xsl</title>

<src:topfragment id="top" default-exclude-result-prefixes="xsl">
<src:passthrough>
&lt;!DOCTYPE xsl:stylesheet [
&lt;!ENTITY nl "&lt;xsl:text>&#xA;&lt;/xsl:text>">
]>
</src:passthrough>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:src="http://nwalsh.com/xmlns/litprog/fragment"
                exclude-result-prefixes="src"
                version="1.0">

  <xsl:include href="VERSION"/>

  <src:fragref linkend="space"/>
  <src:fragref linkend="output"/>
  <src:fragref linkend="root.template"/>
  <src:fragref linkend="text"/>
  <src:fragref linkend="default"/>
  <src:fragref linkend="rest"/>
</xsl:stylesheet>
</src:topfragment>

<section><title>Stuff</title>

<src:fragment id="space">
<xsl:preserve-space elements="*"/>
</src:fragment>

<src:fragment id="output">
<xsl:output method="xml"/>
</src:fragment>

<src:fragment id="root.template">
<xsl:template match="/">
  <xsl:text>&#xA;</xsl:text>
  <xsl:comment>
    <xsl:text> This file was generated by tangle.xsl version </xsl:text>
    <xsl:value-of select="$VERSION"/>
    <xsl:text>. Do not edit! </xsl:text>
  </xsl:comment>
  <xsl:text>&#xA;</xsl:text>
  <xsl:comment> See http://sourceforge.net/projects/docbook/ </xsl:comment>
  <xsl:apply-templates select="//src:topfragment"/>
</xsl:template>
</src:fragment>

<src:fragment id="text">
<xsl:template match="text()"/>
</src:fragment>

<src:fragment id="default">
<xsl:template match="*">
  <xsl:apply-templates/>
</xsl:template>
</src:fragment>

<src:fragment id="rest">
<xsl:template match="src:topfragment">
  <xsl:apply-templates mode="copy"/>
</xsl:template>

<xsl:template match="src:fragment">
  <xsl:apply-templates mode="copy"/>
</xsl:template>

<xsl:template match="*" mode="copy">
  <xsl:variable name="node" select="."/>
  <xsl:element name="{name(.)}" namespace="{namespace-uri(.)}">
    <xsl:for-each select="namespace::*">
      <xsl:if test="string(.) != namespace-uri($node)">
        <xsl:copy/>
      </xsl:if>
    </xsl:for-each>
    <xsl:copy-of select="@*"/>
    <xsl:apply-templates mode="copy"/>
  </xsl:element>
</xsl:template>

<xsl:template match="src:passthrough" mode="copy">
  <xsl:value-of disable-output-escaping="yes" select="."/>
</xsl:template>

<xsl:template match="src:fragref" mode="copy">
  <xsl:variable name="node" select="."/>
  <xsl:choose>
    <xsl:when test="@disable-output-escaping='yes'">
      <xsl:element name="{name(.)}" namespace="namespace-uri(.)">
        <xsl:for-each select="namespace::*">
          <xsl:if test="string(.) != namespace-uri($node)">
            <xsl:copy/>
          </xsl:if>
        </xsl:for-each>
        <xsl:for-each select="@*">
          <xsl:if test="not(name(.) = 'disable-output-escaping')">
            <xsl:copy/>
          </xsl:if>
        </xsl:for-each>
        <xsl:apply-templates mode="copy"/>
      </xsl:element>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="linkend" select="@linkend"/>
      <xsl:variable name="fragment" select="//src:fragment[@id=$linkend]"/>
      <xsl:apply-templates select="$fragment"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template match="src:comment" mode="copy">
  <xsl:comment>
    <xsl:value-of select="."/>
  </xsl:comment>
</xsl:template>
</src:fragment>
</section>
</article>

