# This file is part of DocBook NG: The "Absinthe" Release.

# This schema is a "work-in-progress". It validates a DocBook-like grammar that
# may, in some incarnation, form the basis for DocBook V.next. Or it may not.
# At the moment, it's just an exploration by Norm. It has utterly no normative
# value at all.
#
# Author: Norman Walsh, <ndw@nwalsh.com>
# Source: Derived from DocBook XML V4.3
# Release: $Id$
#
# ======================================================================

namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace db = "http://docbook.org/docbook-ng/absinthe"
default namespace = "http://docbook.org/docbook-ng/absinthe"

status.attribute = attribute status { text }
label.attribute = attribute label { text }

# ======================================================================

divisions = db.part

components =
   db.dedication
 | db.preface
 | db.chapter
 | db.appendix
 | db.article
 | db.colophon

navigation.components = notAllowed

component.contentmodel =
  navigation.components*, blocks.or.sections, navigation.components*

# ======================================================================

setindex.components = notAllowed
toc.components = notAllowed

# ======================================================================

[
   db:refname [ "set" ]
   db:refpurpose [ "" ]
]
div {

   local.set.attributes = empty

   set.status.attrib = status.attribute

   set.role.attribute = attribute role { text }

   set.attr =
      set.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & set.status.attrib?
    & local.set.attributes

   set.info = docbook.info.titlereq

   db.set =
      element set {
         set.attr,
         set.info,
         toc.components?,
         (db.set|db.book)+,
         setindex.components?
      }
}

# ======================================================================

[
   db:refname [ "book" ]
   db:refpurpose [ "" ]
]
div {

   local.book.attributes = empty

   book.status.attrib = status.attribute

   book.role.attribute = attribute role { text }

   book.attr =
      book.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & book.status.attrib?
    & local.book.attributes

   book.info = docbook.info.titlereq

   db.book =
      element book {
         book.attr,
         book.info,
         (navigation.components | components | divisions)+
      }
}

# ======================================================================

[
   db:refname [ "dedication" ]
   db:refpurpose [ "" ]
]
div {

   local.dedication.attributes = empty

   dedication.status.attrib = status.attribute

   dedication.role.attribute = attribute role { text }

   dedication.attr =
      dedication.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & dedication.status.attrib?
    & local.dedication.attributes

   dedication.info = docbook.info

   db.dedication =
      element dedication {
         dedication.attr,
         dedication.info,
         blocks+
      }
}

# ======================================================================

[
   db:refname [ "colophon" ]
   db:refpurpose [ "" ]
]
div {

   local.colophon.attributes = empty

   colophon.status.attrib = status.attribute

   colophon.role.attribute = attribute role { text }

   colophon.attr =
      colophon.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & colophon.status.attrib?
    & local.colophon.attributes

   colophon.info = docbook.info

   db.colophon =
      element colophon {
         colophon.attr,
         colophon.info,
         blocks+
      }
}

# ======================================================================

[
   db:refname [ "appendix" ]
   db:refpurpose [ "" ]
]
div {

   local.appendix.attributes = empty

   appendix.status.attrib = status.attribute

   appendix.role.attribute = attribute role { text }

   appendix.attr =
      appendix.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & appendix.status.attrib?
    & local.appendix.attributes

   appendix.info = docbook.info.titlereq

   db.appendix =
      element appendix {
         appendix.attr,
         appendix.info,
         component.contentmodel
      }
}

# ======================================================================

[
   db:refname [ "chapter" ]
   db:refpurpose [ "" ]
]
div {

   local.chapter.attributes = empty

   chapter.status.attrib = status.attribute

   chapter.role.attribute = attribute role { text }

   chapter.attr =
      chapter.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & chapter.status.attrib?
    & local.chapter.attributes

   chapter.info = docbook.info.titlereq

   db.chapter =
      element chapter {
         chapter.attr,
         chapter.info,
         component.contentmodel
      }
}

# ======================================================================

part.components = navigation.components | components

# ======================================================================

[
   db:refname [ "part" ]
   db:refpurpose [ "" ]
]
div {

   local.part.attributes = empty

   part.status.attrib = status.attribute

   part.role.attribute = attribute role { text }

   part.attr =
      part.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & part.status.attrib?
    & local.part.attributes

   part.info = docbook.info.titlereq

   db.part =
      element part {
         part.attr,
         part.info,
         db.partintro?,
         part.components+
      }
}

# ======================================================================

[
   db:refname [ "preface" ]
   db:refpurpose [ "" ]
]
div {

   local.preface.attributes = empty

   preface.status.attrib = status.attribute

   preface.role.attribute = attribute role { text }

   preface.attr =
      preface.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & preface.status.attrib?
    & local.preface.attributes

   preface.info = docbook.info

   db.preface =
      element preface {
         preface.attr,
         preface.info,
         component.contentmodel
      }
}

# ======================================================================

[
   db:refname [ "partintro" ]
   db:refpurpose [ "" ]
]
div {

   local.partintro.attributes = empty

   partintro.status.attrib = status.attribute

   partintro.role.attribute = attribute role { text }

   partintro.attr =
      partintro.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & partintro.status.attrib?
    & local.partintro.attributes

   partintro.info = docbook.info

   db.partintro =
      element partintro {
         partintro.attr,
         partintro.info,
         blocks.or.sections
      }
}

# ======================================================================

sections.optional = db.section* | db.simplesect*

sections.required = db.section+ | db.simplesect+

blocks.or.sections =
  (blocks+, sections.optional) | sections.required

# ======================================================================

[
   db:refname [ "section" ]
   db:refpurpose [ "" ]
]
div {

   local.section.attributes = empty

   section.status.attrib = status.attribute

   section.role.attribute = attribute role { text }

   section.attr =
      section.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & section.status.attrib?
    & local.section.attributes

   section.info = docbook.info.titlereq

   db.section =
      element section {
         section.attr,
         section.info,
         blocks.or.sections
      }
}

# ======================================================================

[
   db:refname [ "simplesect" ]
   db:refpurpose [ "" ]
]
div {

   local.simplesect.attributes = empty

   simplesect.status.attrib = status.attribute

   simplesect.role.attribute = attribute role { text }

   simplesect.attr =
      simplesect.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & simplesect.status.attrib?
    & local.simplesect.attributes

   simplesect.info = docbook.info.titlereq

   db.simplesect =
      element simplesect {
         simplesect.attr,
         simplesect.info,
         blocks+
      }
}

# ======================================================================

[
   db:refname [ "ackno" ]
   db:refpurpose [ "" ]
]
div {

   local.ackno.attributes = empty

   ackno.role.attribute = attribute role { text }

   ackno.attr =
      ackno.role.attribute?
    & common.attributes
    & common.linking.attributes
    & local.ackno.attributes

   db.ackno=
      element ackno {
         ackno.attr,
         para.blocks+
      }
}

# ======================================================================

article.components.optional = db.section* | db.simplesect*
article.components.required = db.section+ | db.simplesect+

# ======================================================================

[
   db:refname [ "article" ]
   db:refpurpose [ "" ]
]
div {

   local.article.attributes = empty

   article.status.attrib = status.attribute

   article.class.attrib =
      attribute class {
         "faq"
       | "journalarticle"
       | "productsheet"
       | "specification"
       | "techreport"
       | "whitepaper"
      }

   article.role.attribute = attribute role { text }

   article.attr =
      article.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & article.status.attrib?
    & article.class.attrib?
    & local.article.attributes

   article.info = docbook.info.titlereq

   db.article =
      element article {
         article.attr,
         article.info,
         navigation.components*,
         ((blocks+, article.components.optional) | article.components.required),
         (db.appendix | navigation.components | db.ackno)*
      }
}

