# This file is part of DocBook NG: The "Absinthe" Release.

# This schema is a "work-in-progress". It validates a DocBook-like grammar that
# may, in some incarnation, form the basis for DocBook V.next. Or it may not.
# At the moment, it's just an exploration by Norm. It has utterly no normative
# value at all.
#
# Author: Norman Walsh, <ndw@nwalsh.com>
# Source: Derived from DocBook XML V4.3
# Release: $Id$
#

namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace db = "http://docbook.org/docbook-ng/absinthe"
default namespace = "http://docbook.org/docbook-ng/absinthe"

start |= db.setindex

ubiq.inlines |= db.indexterm
indexing.inlines |= db.indexterm
blocks.nopara |= db.indexterm
navigation.components |= db.index
setindex.components |= db.setindex

info.elements |= db.itermset

significance.attribute = attribute significance { "normal" | "preferred" }
zone.attribute = attribute zone { xsd:IDREFS }
pagenum.attribute = attribute pagenum { text }
scope.attribute = attribute scope { "all" | "global" | "local" }

sortas.attribute = attribute sortas { text }

# ======================================================================

[
   db:refname [ "itermset" ]
   db:refpurpose [ "" ]
]
div {

   itermset.role.attribute = attribute role { text }

   itermset.attr =
      itermset.role.attribute?
    & common.attributes
    & common.linking.attributes

   db.itermset =
      element itermset {
         itermset.attr,
         indexterm.singular+
      }
}

# ======================================================================

indexterm.contentmodel =
   db.primary?,
   ((db.secondary,
      ((db.tertiary, (db.see | db.seealso+)?)
       | db.see
       | db.seealso+)?)
    | db.see
    | db.seealso+)?

# ======================================================================

[
   db:refname [ "indexterm" ]
   db:refpurpose [ "" ]
]
div {

   indexterm.singular.role.attribute = attribute role { text }

   indexterm.singular.attr =
      indexterm.singular.role.attribute?
    & common.attributes
    & common.linking.attributes
    & significance.attribute?
    & zone.attribute?
    & pagenum.attribute?
    & scope.attribute?
    & attribute class { "singular" }?

   indexterm.singular =
      element indexterm {
         indexterm.singular.attr,
         indexterm.contentmodel
      }
}

# ======================================================================

[
   db:refname [ "indexterm" ]
   db:refpurpose [ "" ]
]
div {

   indexterm.startofrange.role.attribute = attribute role { text }

   indexterm.startofrange.attr =
      indexterm.startofrange.role.attribute?
    & common.attributes
    & common.linking.attributes
    & significance.attribute?
    & zone.attribute?
    & pagenum.attribute?
    & scope.attribute?
    & attribute class { "startofrange" }

   indexterm.startofrange =
      element indexterm {
         indexterm.startofrange.attr,
         indexterm.contentmodel
      }
}

# ======================================================================

[
   db:refname [ "indexterm" ]
   db:refpurpose [ "" ]
]
div {

   indexterm.endofrange.role.attribute = attribute role { text }

   indexterm.endofrange.attr =
      indexterm.endofrange.role.attribute?
    & common.attributes
    & common.linking.attributes
    & significance.attribute?
    & zone.attribute?
    & pagenum.attribute?
    & scope.attribute?
    & attribute class { "endofrange" }
    & attribute startref { xsd:IDREF }

   indexterm.endofrange =
      element indexterm {
         indexterm.endofrange.attr,
         indexterm.contentmodel
      }
}

# ======================================================================

[
   db:refname [ "indexterm" ]
   db:refpurpose [ "" ]
]
div {

   db.indexterm = (indexterm.singular|indexterm.startofrange|indexterm.endofrange)

}

# ======================================================================

[
   db:refname [ "primary" ]
   db:refpurpose [ "" ]
]
div {

   primary.role.attribute = attribute role { text }

   primary.attr =
      primary.role.attribute?
    & common.attributes
    & common.linking.attributes
    & sortas.attribute?

   db.primary =
      element primary {
         primary.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "secondary" ]
   db:refpurpose [ "" ]
]
div {

   secondary.role.attribute = attribute role { text }

   secondary.attr =
      secondary.role.attribute?
    & common.attributes
    & common.linking.attributes
    & sortas.attribute?

   db.secondary =
      element secondary {
         secondary.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "tertiary" ]
   db:refpurpose [ "" ]
]
div {

   tertiary.role.attribute = attribute role { text }

   tertiary.attr =
      tertiary.role.attribute?
    & common.attributes
    & common.linking.attributes
    & sortas.attribute?

   db.tertiary =
      element tertiary {
         tertiary.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "see" ]
   db:refpurpose [ "" ]
]
div {

   see.role.attribute = attribute role { text }

   see.attr =
      see.role.attribute?
    & common.attributes
    & common.linking.attributes

   db.see =
      element see {
         see.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "seealso" ]
   db:refpurpose [ "" ]
]
div {

   seealso.role.attribute = attribute role { text }

   seealso.attr =
      seealso.role.attribute?
    & common.attributes
    & common.linking.attributes

   db.seealso =
      element seealso {
         seealso.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "index" ]
   db:refpurpose [ "" ]
]
div {

   index.status.attribute = status.attribute

   index.role.attribute = attribute role { text }

   index.attr =
      index.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & index.status.attribute?

   index.info = docbook.info

   db.index =
      element index {
         index.attr,
         index.info,
         blocks*,
         (db.indexdiv* | db.indexentry* | db.segmentedlist)
      }
}

#  ======================================================================

[
   db:refname [ "setindex" ]
   db:refpurpose [ "" ]
]
div {

   setindex.status.attribute = status.attribute

   setindex.role.attribute = attribute role { text }

   setindex.attr =
      setindex.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & setindex.status.attribute?

   setindex.info = docbook.info

   db.setindex =
      element setindex {
         setindex.attr,
         setindex.info,
         blocks*,
         (db.indexdiv* | db.indexentry*)
      }
}

# ======================================================================

[
   db:refname [ "indexdiv" ]
   db:refpurpose [ "" ]
]
div {

   indexdiv.status.attribute = status.attribute

   indexdiv.role.attribute = attribute role { text }

   indexdiv.attr =
      indexdiv.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & indexdiv.status.attribute?

   indexdiv.info = docbook.info.titlereq

   db.indexdiv =
      element indexdiv {
         indexdiv.attr,
         indexdiv.info,
         blocks*,
         (db.indexentry+|db.segmentedlist)
      }
}

# ======================================================================

[
   db:refname [ "indexentry" ]
   db:refpurpose [ "" ]
]
div {

   indexentry.role.attribute = attribute role { text }

   indexentry.attr =
      indexentry.role.attribute?
    & common.attributes
    & common.linking.attributes

   db.indexentry =
      element indexentry {
         indexentry.attr,
         db.primaryie,
         (db.seeie | db.seealsoie)*,
         (db.secondaryie, (db.seeie | db.seealsoie | db.tertiaryie)*)*
      }
}

# ======================================================================

[
   db:refname [ "primaryie" ]
   db:refpurpose [ "" ]
]
div {

   primaryie.role.attribute = attribute role { text }

   primaryie.attr =
      primaryie.role.attribute?
    & common.attributes
    & linkends.attribute?

   db.primaryie =
      element primaryie {
         primaryie.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "secondaryie" ]
   db:refpurpose [ "" ]
]
div {

   secondaryie.role.attribute = attribute role { text }

   secondaryie.attr =
      secondaryie.role.attribute?
    & common.attributes
    & linkends.attribute?

   db.secondaryie =
      element secondaryie {
         secondaryie.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "tertiaryie" ]
   db:refpurpose [ "" ]
]
div {

   tertiaryie.role.attribute = attribute role { text }

   tertiaryie.attr =
      tertiaryie.role.attribute?
    & common.attributes
    & linkends.attribute?

   db.tertiaryie =
      element tertiaryie {
         tertiaryie.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "seeie" ]
   db:refpurpose [ "" ]
]
div {

   seeie.role.attribute = attribute role { text }

   seeie.attr =
      seeie.role.attribute?
    & common.attributes
    & linkend.attribute?

   db.seeie =
      element seeie {
         seeie.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "seealsoie" ]
   db:refpurpose [ "" ]
]
div {

   seealsoie.role.attribute = attribute role { text }

   seealsoie.attr =
      seealsoie.role.attribute?
    & common.attributes
    & linkends.attribute?

   db.seealsoie =
      element seealsoie {
         seealsoie.attr,
         inlines*
      }
}
