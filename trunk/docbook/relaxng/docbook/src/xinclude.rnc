# This file is part of DocBook NG: The "Lillet" Release.

# This schema is a "work-in-progress". It validates a DocBook-like grammar that
# may, in some incarnation, form the basis for DocBook V.next. Or it may not.
# At the moment, it's just an exploration by Norm. It has utterly no normative
# value at all.
#
# Author: Norman Walsh, <ndw@nwalsh.com>
# Source: Derived from DocBook XML V4.3
# Release: $Id$
#

namespace ctrl = "http://nwalsh.com/xmlns/schema-control/"
namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace db = "http://docbook.org/ns/docbook"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

db.divisions |= db.xi.include
db.components |= db.xi.include

db.toplevel.sections |=
   (db.section|db.xi.include)+ | (db.simplesect|db.xi.include)+

db.recursive.sections |=
   (db.section|db.xi.include)+ | (db.simplesect|db.xi.include)+

db.part.components |= db.xi.include

db.all.blocks |= db.xi.include
db.all.inlines |= db.xi.include

ctrl:conditional [
  pattern="db.refentry"

  rng:define [
    name = "db.toplevel.sections"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refentry" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]

  rng:define [
    name = "db.recursive.sections"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refentry" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]

  rng:define [
    name = "db.toplevel.refsection"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refentry" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]

  rng:define [
    name = "db.secondlevel.refsection"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refentry" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]
]

ctrl:conditional [
  pattern="db.refsect1"

  rng:define [
    name = "db.toplevel.sections"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refsect1" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]

  rng:define [
    name = "db.recursive.sections"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refsect1" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]

  rng:define [
    name = "db.toplevel.refsection"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refsect1" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]

  rng:define [
    name = "db.secondlevel.refsection"
    combine = "choice"
    rng:oneOrMore [
      rng:choice [
        rng:ref [ name = "db.refsect2" ]
        rng:ref [ name = "db.xi.include" ]
      ]
    ]
  ]
]

ctrl:conditional [
  pattern="db.sect1"

  rng:define [
    name = "db.toplevel.sections"
    combine = "choice"
    rng:oneOrMore [
       rng:choice [
          rng:ref [ name = "db.sect1" ]
          rng:ref [ name = "db.xi.include" ]
       ]
    ]
  ]

  rng:define [
    name = "db.sect1.sections"
    combine = "choice"
    rng:oneOrMore [
       rng:choice [
          rng:ref [ name = "db.sect2" ]
          rng:ref [ name = "db.xi.include" ]
       ]
    ]
  ]

  rng:define [
    name = "db.sect2.sections"
    combine = "choice"
    rng:oneOrMore [
       rng:choice [
          rng:ref [ name = "db.sect3" ]
          rng:ref [ name = "db.xi.include" ]
       ]
    ]
  ]

  rng:define [
    name = "db.sect3.sections"
    combine = "choice"
    rng:oneOrMore [
       rng:choice [
          rng:ref [ name = "db.sect4" ]
          rng:ref [ name = "db.xi.include" ]
       ]
    ]
  ]

  rng:define [
    name = "db.sect4.sections"
    combine = "choice"
    rng:oneOrMore [
       rng:choice [
          rng:ref [ name = "db.sect5" ]
          rng:ref [ name = "db.xi.include" ]
       ]
    ]
  ]

  rng:define [
    name = "db.sect5.sections"
    combine = "choice"
    rng:oneOrMore [
       rng:choice [
          rng:ref [ name = "db.simplesect" ]
          rng:ref [ name = "db.xi.include" ]
       ]
    ]
  ]
]

# ======================================================================

[
   db:refname [ "xi:include" ]
   db:refpurpose [ "An XInclude" ]
]
div {

   db.xi.include.attlist =
     attribute href { xsd:anyURI { pattern = "[^#]+" } }?,
     [ a:defaultValue="xml" ] attribute parse { "xml" | "text" }?,
     attribute xpointer { text }?,
     attribute encoding { text }?,
     attribute accept { text }?,
     attribute accept-language { text }?

   db.xi.include =
      element xi:include {
        db.xi.include.attlist,
        db.xi.fallback?
      }
}

# ======================================================================

[
   db:refname [ "xi:fallback" ]
   db:refpurpose [ "An XInclude fallback" ]
]
div {
  # The fallback element has no attributes

  db.xi.fallback =
      element xi:fallback {
        db.all.blocks+ | db.all.inlines+ | db._any*
      }
}
