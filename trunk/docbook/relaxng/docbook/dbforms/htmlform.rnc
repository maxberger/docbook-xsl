# This file is part of DocBook V5.0b2
#
# Copyright 1992-2005 HaL Computer Systems, Inc.,
# O'Reilly & Associates, Inc., ArborText, Inc., Fujitsu Software
# Corporation, Norman Walsh, Sun Microsystems, Inc., and the
# Organization for the Advancement of Structured Information
# Standards (OASIS).
#
# Release: $Id$
#
# Permission to use, copy, modify and distribute the DocBook schema
# and its accompanying documentation for any purpose and without fee
# is hereby granted in perpetuity, provided that the above copyright
# notice and this paragraph appear in all copies. The copyright
# holders make no representation about the suitability of the schema
# for any purpose. It is provided "as is" without expressed or implied
# warranty.
#
# If you modify the DocBook schema in any way, label your schema as a
# variant of DocBook. See the reference documentation
# (http://docbook.org/tdg5/en/html/ch05.html#s-notdocbook)
# for more information.
#
# Please direct all questions, bug reports, or suggestions for changes
# to the docbook@lists.oasis-open.org mailing list. For more
# information, see http://www.oasis-open.org/docbook/.
#
# ======================================================================

namespace html = "http://www.w3.org/1999/xhtml"
namespace ctrl = "http://nwalsh.com/xmlns/schema-control/"
namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace db = "http://docbook.org/ns/docbook"
default namespace = "http://docbook.org/ns/docbook"

db.extension.blocks |= db.html.form
db.extension.inlines |=
   db.html.input
 | db.html.button
 | db.html.label
 | db.html.select
 | db.html.textarea
 | db.html.fieldset

# ======================================================================

[
   db:refname [ "html:form" ]
   db:refpurpose [ "An HTML form" ]
]
div {

   db.html.form.attlist =
      db.html.attrs
 & [
      db:purpose [ "Specifies a form processing agent. User agent behavior for a value other than an HTTP URI is undefined." ]
   ]
   attribute action { xsd:anyURI }
 & [
      db:purpose [ "Specifies which HTTP method will be used to submit the form data set. Possible (case-insensitive) values are " db:quote [ "get" ] " (the default) and " db:quote [ "post" ] ". " ]
   ]
   attribute method { "get" | "post" }?
 & [
      db:purpose [ "Ocurs when a form is submitted. It only applies to the " db:tag [ "html:form" ] " element." ]
   ]
   attribute onsubmit { text }?
 & [
      db:purpose [ "Ocurs when a form is reset. It only applies to the " db:tag [ "html:form" ] " element." ]
   ]
   attribute onreset { text }?
 & [
      db:purpose [ "Specifies the content type used to submit the form to the server (when the value of method is " db:quote [ "post" ] "). The default value for this attribute is " db:quote [ "application/x-www-form-urlencoded" ] ". The value " db:quote [ "multipart/form-data" ] " should be used in combination with the " db:tag [ "html:input" ] " element, type=" db:quote [ "file" ] "." ]
   ]
   attribute enctype { text }?
 & [
      db:purpose [ "Specifies a comma-separated list of content types that a server processing this form will handle correctly." ]
   ]
   attribute accept { text }?
 & [
      db:purpose [ "Specifies the list of character encodings for input data that is accepted by the server processing this form. The value is a space- and/or comma-delimited list of charset values. The client must interpret this list as an exclusive-or list, i.e., the server is able to accept any single character encoding per entity received." ]
   ]
   attribute accept-charset { text }?

   db.html.form =
      element html:form {
         db.html.form.attlist,
         ( db.all.blocks
          | db.html.input
          | db.html.button
          | db.html.label
          | db.html.select
          | db.html.textarea
          | db.html.fieldset)+
      }
}

# ======================================================================

[
   db:refname [ "html:input" ]
   db:refpurpose [ "An input element in an HTML form" ]
]
div {

   db.html.input.attlist =
      db.html.attrs
    & attribute type {
       "text"
     | "password"
     | "checkbox"
     | "radio"
     | "submit"
     | "reset"
     | "file"
     | "hidden"
     | "image"
     | "button" }?
    & attribute name { text }?
    & attribute value { text }?
    & attribute checked { "checked" }?
    & attribute disabled { "disabled" }?
    & attribute readonly { "readonly" }?
    & attribute size { text }?
    & attribute maxlength { text }?
    & attribute src { text }?
    & attribute alt { text }?
    & attribute usemap { text }?
    & attribute tabindex { text }?
    & attribute accesskey { text }?
    & attribute onfocus { text }?
    & attribute onblur { text }?
    & attribute onselect { text }?
    & attribute onchange { text }?

   db.html.input =
      element html:input {
         db.html.input.attlist,
         empty
      }
}

# ======================================================================

[
   db:refname [ "html:button" ]
   db:refpurpose [ "A button in an HTML form" ]
]
div {

   db.html.button.attlist =
      db.html.attrs
    & attribute name { text }?
    & attribute value { text }?
    & attribute type { "button" | "submit" | "reset" }?
    & attribute disabled { "disabled" }?
    & attribute tabindex { text }?
    & attribute accesskey { text }?
    & attribute onfocus { text }?
    & attribute onblur { text }?

   db.html.button =
      element html:button {
         db.html.button.attlist,
         db.all.inlines*
      }
}

# ======================================================================

[
   db:refname [ "html:label" ]
   db:refpurpose [ "A label in an HTML form" ]
]
div {

   db.html.label.attlist =
      db.html.attrs
    & attribute accesskey { text }?
    & attribute onfocus { text }?
    & attribute onblur { text }?

   db.html.label =
      element html:label {
         db.html.label.attlist,
         db.all.inlines*
      }
}

# ======================================================================

[
   db:refname [ "html:select" ]
   db:refpurpose [ "A select element in an HTML form" ]
]
div {

   db.html.select.attlist =
      db.html.attrs
    & attribute name { text }?
    & attribute size { text }?
    & attribute multiple { "multiple" }?
    & attribute disabled { "disabled" }?
    & attribute tabindex { text }?
    & attribute onfocus { text }?
    & attribute onblur { text }?
    & attribute onchange { text }?

   db.html.select =
      element html:select {
         db.html.select.attlist,
         db.html.option+
      }
}

# ======================================================================

[
   db:refname [ "html:option" ]
   db:refpurpose [ "An option element in an HTML form" ]
]
div {

   db.html.option.attlist =
      db.html.attrs
    & attribute selected { "selected" }?
    & attribute disabled { "disabled" }?
    & attribute value { text }?

   db.html.option =
      element html:option {
         db.html.option.attlist,
         text
      }
}

# ======================================================================

[
   db:refname [ "html:textarea" ]
   db:refpurpose [ "A textarea element in an HTML form" ]
]
div {

   db.html.textarea.attlist =
      db.html.attrs
    & attribute name { text }?
    & attribute rows { text }
    & attribute cols { text }
    & attribute disabled { "disabled" }?
    & attribute readonly { "readonly" }?
    & attribute tabindex { text }?
    & attribute accesskey { text }?
    & attribute onfocus { text }?
    & attribute onblur { text }?
    & attribute onselect { text }?
    & attribute onchange { text }?

   db.html.textarea =
      element html:textarea {
         db.html.textarea.attlist,
         text
      }
}

# ======================================================================

[
   db:refname [ "html:fieldset" ]
   db:refpurpose [ "A fieldset element in an HTML form" ]
]
div {

   db.html.fieldset.attlist =
      db.html.attrs

   db.html.fieldset =
      element html:fieldset {
         db.html.fieldset.attlist,
         db.html.legend?,
         (db.all.blocks
          | db.html.input
          | db.html.button
          | db.html.label
          | db.html.select
          | db.html.textarea
          | db.html.fieldset)+
      }
}

# ======================================================================

[
   db:refname [ "html:legend" ]
   db:refpurpose [ "A legend in an HTML form fieldset" ]
]
div {

   db.html.legend.attlist =
      db.html.attrs
    & attribute accesskey { text }?

   db.html.legend =
      element html:legend {
         db.html.legend.attlist,
         db.all.inlines*
      }
}
