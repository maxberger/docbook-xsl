#!/bin/bash

DONE=0
DEBUG=false                     # not used
VERSION=2
MEMORY=""
USECRIMSON=false
USERESOLVER=true
RESOLVERS=""

MYDIR=`dirname $0`
. $MYDIR/common-functions.sh

while [ "$DONE" = "0" ]; do
    case $1 in
        -m)     shift
		MEMORY="-Xmx$1"
		shift
		;;
        -crimson)
		shift
		USECRIMSON=true
		;;
        -noresolver)
		shift
		USERESOLVER=false
		;;
        -d)     shift
		DEBUG=true
		;;
        -q)     shift
		VERBOSE=false
		;;
        -v)     shift
		VERBOSE=true
		;;
        -1)     shift
		VERSION=1
		;;
        -2*)    VERSION=${1#-}
                shift
		;;
        -X)     shift
		DOCBOOKXSL="$1"
		shift
		;;
	-*)	DONE=1
	        ;;
	*)	DONE=1
                ;;
    esac
done


##
## optionally replace the SAXParser with crimson
##
if $USECRIMSON; then
  CRIMSON=`findcrimson`
  if [ ! "$CRIMSON" ]; then
    echo "crimson requested but cannot be found" 1>&2
    exit 1
  else
    SAXPARSER="-Djavax.xml.parsers.SAXParserFactory=org.apache.crimson.jaxp.SAXParserFactoryImpl"
  fi
fi

# FIXME: do this right
NDWEXT="/sourceforge/docbook/xsl/extensions/xalan2/.classes";

if [ "$VERSION" = "1" ]; then
  if [ ! "$XALAN" ]; then
    ##
    ## find xalan 1
    ##
    for path in "${XALANROOT}" \
                "${XALANROOT}/xalan.jar" \
                "/usr/local/java/xalan-1.2.2" \
                "/usr/local/share/java/xalan-1.2.2" \
                "/usr/share/java/xalan.jar"; do
      if [ -f "$path" -o -d "$path" ]; then
        XALAN="$path"
        break
      fi
    done
    # find bsf
    for path in "${XALANROOT}/bsf.jar" \
                "/usr/local/java/bsf.jar" \
                "/usr/local/share/java/bsf.jar" \
                "/usr/share/java/bsf.jar"; do
      if [ -f "$path" ]; then
        XALAN="$XALAN:$path"
        break
      fi
    done
  fi

  # resolver isn't supported
  RESOLVERS=

  ##
  ## use the appropriate xerces
  ##
  XERCES=`findxerces1`
  if [ ! "$XERCES" ]; then
    echo "cannot locate Xerces (xerces.jar)" 1>&2
    exit 1
    # see http://xml.apache.org/xalan-j/usagepatterns.html#plug
    # no need to set these
    # -Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl
    # -Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl"
  fi

else
  ##
  ## xalan 2
  ##

  if [ ! "$XALAN" ]; then
    STRIKEVERSION=`echo $VERSION | sed -e 's/\([0-9]\)\([0-9]\)/\1_\2/g; s/\([0-9]\)\([0-9D]\)/\1_\2/g;'`
    DOTVERSION=`echo $VERSION | sed -e 's/\([0-9]\)\([0-9]\)/\1.\2/g; s/\([0-9]\)\([0-9D]\)/\1.\2/g;'`
    ##
    ## first find xalan2.jar or directory for compiled classes
    ##
    for path in "${XALANROOT}/build/classes" \
                "${XALANROOT}" \
                "${XALANROOT}/xalan2.jar" \
                "${XALANROOT}/bin/xalan2.jar" \
                "/projects/apache/xml-xalan/java" \
                "/usr/local/java/xalan-j_${STRIKEVERSION}/bin/xalan.jar" \
                "/usr/local/share/java/xalan-j_${STRIKEVERSION}/bin/xalan.jar" \
                "/usr/local/share/java/xalan-$STRIKEVERSION.jar" \
                "/usr/local/share/java/xalan-$DOTVERSION.jar" \
                "/usr/local/share/java/xalan2.jar" \
                "/usr/local/java/xalan-$STRIKEVERSION.jar" \
                "/usr/local/java/xalan-$DOTVERSION.jar" \
                "/usr/local/java/xalan2.jar" \
                "/usr/share/java/xalan-$STRIKEVERSION.jar" \
                "/usr/share/java/xalan-$DOTVERSION.jar" \
                "/usr/share/java/xalan2.jar"; do
      if [ -f "$path" -o -d "$path" ]; then
        if [ ${VERBOSE} ] && ${VERBOSE}; then
          echo "found xalan2 in $path" 1>&2
        fi
        XALAN="$path"
        break
      fi
    done
    if [ ! "$XALAN" ]; then
      echo "xalan $VERSION cannot be found" 1>&2
      exit 1
    fi

    ##
    ## we also need xml-apis.jar
    ##
    XALANDIR=`dirname $XALAN`
    for path in "${XALANDIR}/xml-apis.jar" \
                "${XALANROOT}/xml-apis.jar" \
                "${XALANROOT}/bin/xml-apis.jar"; do
      if [ -f "$path" -o -d "$path" ]; then
        XALAN="${XALAN}:$path"
        break
      fi
    done
  fi

  ##
  ## use the appropriate xerces
  ##
  XERCES=`findxerces2`
  if [ ! "$XERCES" ]; then
    echo "cannot locate Xerces 2" 1>&2
    exit 1
  fi

  ##
  ## resolver
  ##
  if $USERESOLVER; then
    RESOLVER=`findresolver`
    if [ ${RESOLVER/sun/} != ${RESOLVER} ]; then
      # guess this is the sun resolver
      RESOLVERS="-URIRESOLVER com.sun.resolver.tools.CatalogResolver -ENTITYRESOLVER com.sun.resolver.tools.CatalogResolver"
    else
      # guess this is the Apache resolver
      RESOLVERS="-URIRESOLVER org.apache.xml.resolver.tools.CatalogResolver -ENTITYRESOLVER org.apache.xml.resolver.tools.CatalogResolver"
    fi
  fi
fi

CLASSPATH=`fixclasspath "$NDWEXT:$XALAN:$JAXP:$RESOLVER:$XERCES:$CLASSPATH"`

if [ ${VERBOSE} ] && ${VERBOSE}; then
  echo java $MEMORY $SAXPARSER org.apache.xalan.xslt.Process $RESOLVERS $@
fi
exec java -cp $CLASSPATH $MEMORY $SAXPARSER org.apache.xalan.xslt.Process $RESOLVERS $@

