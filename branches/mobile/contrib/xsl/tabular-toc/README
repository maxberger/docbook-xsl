
This is a hack (customization) based around the docbook-xsl-1.66.0 
(I can tell you it barffs on contact with docbook-xsl-1.64.1)
stylesheets in which a miniscule part of common and a significant 
part of the html stylesheets have been modified and combined
with the DocBook Website stylesheets.
This allows chunking of books within the tabular-website paradigm.
I used docbook html instead of xhtml because I think xhtml is 
autogenerated from the html pages.
I think profiling would be broken.

The key parameters are (for xsltproc):

               --param  website  1  \
               --param  tabular  1  \
and
               --stringparam  autolayout-file "$${RELATIVE}autolayout.xml" \

Without the website param you should get normal chunking 
Without the tabular param  I have no idea what happens.
Probably you would be better off using the original website stylesheets for that.

Its important to get the RELATIVE PATH right if you have subdirectories, 
otherwise everything is messed up.
See the example Makefile for one way of doing this.
It uses a single Makefile, rather than one for each source xml subdirectory.

The build process will only work with a Makefile.
It won't work as a single XSLT website building process,
The reason for that is because it creates a toplevel
document rootnode parameter at instantiation time.


It also sets the current.docid for olink resolving based on 
the ID of that document rootnode. So you'd better be consistent with 
your olink database if you use one!


Oh, and in the autolayout file you will want to avoid adding the .html 
extension to target filenames as that is added according to the "html.ext"
variable. The customization recognises @framelink="_blank" and @multisect="1" 
attributes of an autolayout  <tocentry>, but the DTD does not! So just avoid 
validating your autolayout.xml file.


Also I never messed with the layout.xsl->autolayout.xsl transformation
I just manually write autolayout.xsl.


If you omit the  autolayout-file parameter declaration 
you can chunk a book as a standalone document with its own 
tabular TOC. You may want to customize the 
"tabular.page.construction" template to make it look pretty.
Just check for not($autolayout) and do something different. 

Olinks via entities seems to be broken 8-/

Hope you like it.
