<project default="help" name="DocBookMobileBuild">

  <dirname property="ant.file.dir" file="${ant.file.DocBookMobileBuild}"/>
  <loadproperties srcFile="${ant.file.dir}/build.properties"/>
  <property name="mobile.include.search" value="true"/>

  <!--include file="${ant.file.dir}/android/build.xml" as="nested"/-->
  <!--include file="${ant.file.dir}/ios/build.xml" as="nested"/-->

  <property name="extensions.dir" value="${ant.file.dir}/../extensions"/>

  <path id="classpath">
<!--    <pathelement location="${extensions.dir}/webhelpindexer.jar"/> Due to not versioning the webhelpindexer,to avoid conflicts-->
    <pathelement location="${ant.file.dir}/extensions/webhelpindexer.jar"/>
    <pathelement location="${extensions.dir}/lucene-analyzers-3.0.0.jar"/>
    <pathelement location="${extensions.dir}/lucene-core-3.0.0.jar"/>
    <pathelement location="${extensions.dir}/tagsoup-1.2.1.jar"/>
  </path>

  <condition property="perform-validation-dtd">
    <equals arg1="${validate-against-dtd}" arg2="true"/>
  </condition>
  <condition property="do-search-indexing">
    <equals arg1="${mobile.include.search}" arg2="true"/>
  </condition>

  <target name="validate" if="perform-validation-dtd">
    <xmlvalidate file="${input-xml}" classname="org.apache.xerces.parsers.SAXParser"/>
  </target>

  <target name="chunk" depends="clean">
    <mkdir dir="${output-dir}"/>
    

    <xslt in="${input-xml}" out="${output-dir}/dummy.html" style="${stylesheet-path}"
      scanincludeddirectories="false" classpath="${xslt-processor-classpath}">
      <param name="mobile.include.search" expression="${mobile.include.search}"
        if="mobile.include.search"/>
      <param name="output_file_name" expression="${output_file_name}"/>
      <param name="mobile.base.dir" expression="${output-dir}" if="output-dir"/>
      <param name="mobile.cordova.version" expression="${phonegap.version}" if="phonegap.version"/>
      <param name="mobile.toc.filename" expression="${mobile.toc.filename}" if="mobile.toc.filename"/>
      <param name="mobile.menubar.filename" expression="${mobile.menubar.filename}" if="mobile.menubar.filename"/>
      <param name="mobile.settings.filename" expression="${mobile.settings.filename}" if="mobile.settings.filename"/>
      <param name="mobile.taphold.filename" expression="${mobile.taphold.filename}" if="mobile.taphold.filename"/>
      <param name="mobile.indexer.language" expression="${mobile.indexer.language}" if="mobile.indexer.language"/>
      <param name="mobile.device.platform" expression="${mobile.device.platform}" if="mobile.device.platform"/>
      <param name="branding" expression="${branding}" if="branding"/>
      <param name="brandname" expression="${brandname}" if="brandname"/>
      <param name="admon.graphics" expression="${admon.graphics}" if="admon.graphics"/>
      <param name="suppress.footer.navigation" expression="${suppress.footer.navigation}" if="suppress.footer.navigation"/>
    </xslt>

    <delete file="${output-dir}/dummy.html"/>

  </target>

  <target name="add_resources" description="copy js and css">
    <!-- add javascripts and CSS files -->
    <echo>adding resources</echo>
    <copy todir="${output-dir}">
      <fileset dir="${ant.file.dir}/template_mobile">
        <include name="**/*"/>
        <exclude name="**/content/search/**"/>
        <exclude name="**/PhoneGapBuild/**"/>
        <exclude name="**/js-dev/**"/>
      </fileset>
    </copy>
    <!-- copy xml configurations for PhoneGap Build -->
    <copy todir="${output-dir}">
      <fileset dir="${ant.file.dir}/template_mobile/PhoneGapBuild">
        <include name="**/**" if="phonegap.build"/>
      </fileset>
    </copy>
    
    <!-- Very simple-minded copy to handle the source document's images -->
    <!-- Customize mobile.xsl to produce ant file to copy images actually used? -->
    <dirname property="input-images-basedir" file="${input-xml}"/>
    <copy todir="${output-dir}/content" failonerror="false">
      <fileset dir="${input-images-basedir}" includes="${input-images-dirs}" />
    </copy>
  </target>

  <target name="index" if="do-search-indexing">

    <echo>start index</echo>
    <copy todir="${output-dir}">
      <fileset dir="${ant.file.dir}/template_mobile">
        <include name="**/*"/>
        <exclude name="**/content/search/*.props"/>
        <exclude name="**/content/search/stemmers/*"/>
        <exclude name="**/PhoneGapBuild/**"/>
				<exclude name="**/js-dev/**"/>
      </fileset>
    </copy>

    <!-- We separate this out so we only copy the stopwords list and stemmer for the indexer language -->
    <copy todir="${output-dir}">
      <fileset dir="${ant.file.dir}/template_mobile">
        <include name="**/content/search/default.props"/>
        <include name="**/content/search/punctuation.props"/>
        <include name="**/content/search/${mobile.indexer.language}*.props"/>
        <include name="**/content/search/stemmers/${mobile.indexer.language}_stemmer.js"/>
      </fileset>
    </copy>

    <!--taskdef name="indexertask"
    classname="com.nexwave.nquindexer.IndexerMain">
    <classpath refid="classpath"/>
  </taskdef-->

    <echo>Indexing html files in ${output-dir}/content</echo>

    <java classname="com.nexwave.nquindexer.IndexerMain" fork="true">
      <sysproperty key="htmlDir" value="${output-dir}/content"/>
      <sysproperty key="indexerLanguage" value="${mobile.indexer.language}"/>
      <sysproperty key="htmlExtension" value="${html.extension}"/>
      <sysproperty key="doStem" value="${enable.stemming}"/>
      <sysproperty key="tocFile" value="${toc.file}"/>
      <sysproperty key="test" value="${indexer-excluded-files}"/>

      <!--TagSoup SAX Parser for parsing even the bad html contents. see 
        http://sourceforge.net/tracker/?func=detail&aid=3401185&group_id=21935&atid=373750-->
      <sysproperty key="org.xml.sax.driver" value="org.ccil.cowan.tagsoup.Parser"/>
      <sysproperty key="javax.xml.parsers.SAXParserFactory"
        value="org.ccil.cowan.tagsoup.jaxp.SAXFactoryImpl"/>

      <!-- Uncomment the following if Xerces is your preference as the SAX XML Parser. Note that the indexing will fail with Xerces
        if the html files are not XML-conformance -->
      <!--sysproperty key="org.xml.sax.driver" value="org.apache.xerces.parsers.SAXParser"/>        
         <sysproperty key="javax.xml.parsers.SAXParserFactory" value="org.apache.xerces.jaxp.SAXParserFactoryImpl"/-->

      <!-- Debug the indexer on port 5005 via remote-debug -->
      <!--jvmarg line="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/-->
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${xercesImpl.jar}"/>
        <pathelement location="${xml-apis.jar}"/>
        <pathelement location="/usr/share/java/xercesImpl.jar"/>
        <pathelement location="/usr/share/java/xml-apis.jar"/>
        <!-- Gentoo Linux friendly default classpath-->
        <!-- <pathelement location="/usr/share/xerces-2/lib/xercesImpl.jar"/>-->
        <!-- <pathelement location="/usr/share/xml-commons/lib/xml-apis.jar"/>-->
      </classpath>
    </java>

    <delete>
      <fileset dir="${output-dir}/content/search" includes="*.props"/>
    </delete>

  </target>

  <!-- Output of chunked htmls for all platforms  -->
  <target name="build" depends="validate , chunk , add_resources , index"/>
  
  <!-- Output chunked of htmls for build apps with "PhoneGap Build" cloud service -->
  <target name="mobile">
    <property name="phonegap.build" value="true"/>
    <antcall>
      <target name="build"/>
    </antcall>
  </target>

  <!-- Output chunked of htmls for webview: don't need phonegap library -->
  <target name="mobile.web">
    <property name="mobile.device.platform" value="none"/>
    <antcall>
      <target name="build"></target>
    </antcall>
  </target>
  
  <!-- Android -->
  <target name="mobile.android">
    <property name="mobile.device.platform" value="android"/>
    <antcall>
      <target name="build"/>
<!--      <target name="nested.android"/>-->
    </antcall>
  </target>

  <!-- iOS -->
  <target name="mobile.iOS">
    <property name="mobile.device.platform" value="iOS"/>
    <antcall>
      <target name="build"/>
<!--      <target name="nested.iOS"/>-->
    </antcall>
  </target>

  <!-- BlackBerry -->
  <target name="mobile.blackberry">
    <property name="mobile.device.platform" value="blackberry"/>
    <antcall>
      <target name="build"/>
<!--      <target name="nested.blackberry"/>-->
    </antcall>
  </target>

  <!-- Windows phone -->
  <target name="mobile.windows_phone_8">
    <property name="mobile.device.platform" value="windows_phone_8"/>
    <antcall>
      <target name="build"/>
    </antcall>
  </target>
  
  <!-- Symbian -->
  <target name="mobile.symbian" depends="build"/>

  <target name="clean">
    <delete dir="${output-dir}"/>
    <delete file="${prof-file}"/>
    <delete dir="${prof-dir}"/>
  </target>

  <target name="help">
    <echo> help : to view help options
      === List of Available mobile platforms ===
      =mobile platform=     =ant command=
			|
      |_PhoneGap Build        :$ant mobile-help *
      |__Web View             :$ant web-help *
      |___Android             :$ant android-help *
      |____Apple iOS          :$ant iOS-help *
      |_____Blackberry        :$ant blackberry-help *
      |______Palm webOS
      |_______Samsung Bada
      |________Windows Phone  :$ant windows-phone-help
      
      (*) :- check for more details
    </echo>
  </target>
  <target name="mobile-help">
    <echo> Available PhoneGap Build commands
      1. $ant mobile : Build apps for all platforms using "PhoneGap Build".
      For more details check on DocBook Mobile documentaion on /www/ directory
      
    </echo>
  </target>
  <target name="web-help">
    <echo> Available Web View commands
      1. $ant mobile.web : Build documentation to use with Web Browser. Don't need to build using PhoneGap.
      
    </echo>
  </target>
  <target name="android-help">
    <echo> Available Android commands 
      1. $ant mobile : 
      2. $ant mobile.android :  
      
      Private Key'. 
      * To gain a key :
      http://developer.android.com/distribute/googleplay/publish/register.html To sign app with the
      key : http://developer.android.com/tools/publishing/app-signing.html 
    </echo>
  </target>
  <target name="iOS-help">
    <echo> Available iOS commands
      1. $ant mobile :
      2. $ant mobile.iOS :
      
    </echo>
  </target>
  <target name="blackberry-help">
    <echo> Available BlackBerry commands
    1. $ant mobile :
    2. $ant mobile.blackberry :
    
    </echo>
  </target>
  <target name="windows_phone_8-help">
    <echo> Available Windows Phone 8 commands
      1. $ant mobile :
      2. $ant mobile.blackberry :
      
    </echo>
  </target>
</project>
