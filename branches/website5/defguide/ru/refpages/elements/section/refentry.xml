<refentry id="section.element" revision='3.1'>
<?dbhtml filename="section.html"?>
<refentryinfo>
<pubdate>$Date$</pubdate>
<releaseinfo>$Revision$</releaseinfo>
</refentryinfo>

<refmeta>
<indexterm><primary>elements</primary>
<secondary>section</secondary></indexterm>
<refentrytitle>section</refentrytitle>
<refmiscinfo>Element</refmiscinfo>
</refmeta>
<refnamediv>
<refname>section</refname>
<refpurpose>&section.purpose;</refpurpose>
</refnamediv>

&section.synopsis.gen;
<refsect1 condition='ref.description'><title>Description</title>

<para>
<sgmltag>Section</sgmltag> is one of the top-level sectioning elements in
a component. There are three types of sectioning elements in
DocBook:
</para>

<itemizedlist>
<listitem><para>
Explicitly numbered sections, <sgmltag>Sect1</sgmltag>&hellip;<sgmltag>Sect5</sgmltag>,
which must be properly nested and can only be five levels deep.
</para></listitem>
<listitem><para>
Recursive <sgmltag>Section</sgmltag>s, which are an alternative to the numbered
sections and have unbounded depth.
</para></listitem>
<listitem><para>
<sgmltag>SimpleSect</sgmltag>s, which are terminal.  <sgmltag>SimpleSect</sgmltag>s can
occur as the <quote>leaf</quote> sections in either recursive sections or any
of the numbered sections, or directly in components.
</para></listitem>
</itemizedlist>

<para>
<sgmltag>Section</sgmltag>s may be more convenient than numbered
sections in some authoring environments because they can be
moved around in the document hierarchy without renaming.
</para>

<para>
None of the sectioning elements is allowed to <quote>float</quote> in
a component. You can place paragraphs and other block elements
before a section, but you cannot place anything after it.
</para>

<refsect2><title>Processing expectations</title>
<para>
&format.block; Sometimes sections are numbered.
</para>
<para>
Use of deeply nested <sgmltag>Section</sgmltag>s may cause problems
in some processing systems.
</para>
</refsect2>


&section.parents.gen;
&section.children.gen;
</refsect1>
<refsect1 condition='ref.elem.attrdesc'><title>Attributes</title>
<variablelist>
<varlistentry><term>label</term>
<listitem>
<para>
<sgmltag class="attribute">Label</sgmltag> specifies an identifying string for presentation purposes.
</para>
<para>
Generally, an explicit <sgmltag class="attribute">Label</sgmltag> attribute is
used only if the processing system is incapable of generating the label
automatically. If present, the <sgmltag class="attribute">Label</sgmltag> 
is normative; it will used even
if the processing system is capable of automatic labelling.
</para>
</listitem>
</varlistentry>
<varlistentry><term>status</term>
<listitem>
<para>
<sgmltag class="attribute">Status</sgmltag> identifies the editorial or publication 
status of the <sgmltag>Section</sgmltag>.
</para>
<para>
Publication status might be used to control formatting (for example,
printing a <quote>draft</quote> watermark on drafts) or processing (perhaps
a document with a status of <quote>final</quote> should not include any
components that are not final).
</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>
<refsect1 condition='ref.elem.seealso'><title>See Also</title>
&section.seealso.gen;
</refsect1>
<refsect1><title>Examples</title>

<informalexample role="example-source">
<programlisting>&section.example.1.txt;</programlisting>
</informalexample>

&section.example.seealso.gen;
</refsect1>
</refentry>

