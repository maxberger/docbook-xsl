# This file is part of the XSL DocBook Stylesheet distrubution
# $Id$
#
# See ../README or http://docbook.sourceforge.net/ for copyright
# and other information.

namespace local = ""
namespace doc = "http://nwalsh.com/xsl/documentation/1.0"
namespace xsl = "http://www.w3.org/1999/XSL/Transform"
namespace db = "http://docbook.org/ns/docbook"
namespace u = "http://nwalsh.com/xsl/unittests#"

include "xslt20.rnc" {
  start = stylesheet.element

  top-level-elements.model =
     (declaration.category | top-level-extension | documentation | unitTests)*

  top-level-extension =
     element * - (xsl:* | local:* | doc:* | u:*) {
        grammar {
           start = any
           any =
              (attribute * { text }
               | text
               | element * { any })*
        }
     }
}

documentation = docMode | docTemplate | docFunction

docMode = element doc:mode {
   attribute name { xsd:QName },
   (db.refpurpose, db.refdescription)
}

docTemplate = element doc:template {
   attribute name { text },
   (db.refpurpose, db.refdescription,
      db.refparameter?, db.refreturns?, unitTests?)
}

docFunction = element doc:function {
   attribute name { text },
   (db.refpurpose, db.refdescription,
      db.refparameter?, db.refreturns?, unitTests?)
}

db.refpurpose =
   element db:refpurpose {
      attribute role { text }?,
      db.anyinline*
   }

db.refdescription =
   element db:refdescription {
      attribute role { text }?,
      db.anyblock+
   }

db.refparameter =
   element db:refparameter {
      attribute role { text }?,
      db.anyblock+
   }

db.refreturns =
   element db:refreturn {
      attribute role { text }?,
      db.anyblock+
   }

# ============================================================

unitTests =
   element u:unittests {
      attribute name { text }?,
      attribute function { text }?,
      attribute template { text }?,
      unitTest+
   }

unitTest =
   element u:test {
      unitContext?, unitVariable*, unitParam*, unitResult
   }

unitVariable =
   element u:variable {
      attribute name { text },
      attribute as { text }?,
      attribute select { text }?,
      (text|unitAnyOther)*
   }

unitContext =
   element u:context {
      attribute as { text }?,
      (text|unitAnyOther)*
   }

unitParam =
   element u:param {
      attribute name { text }?,
      attribute as { text }?,
      attribute select { text }?,
      (text|unitAnyOther)*
   }

unitResult =
   element u:result {
      (text|unitAnyOther)*
   }

unitAnyOther =
   element * - u:* {
   (attribute * { text }
    | text
    | unitAnyOther)*
   }

# ============================================================

db.anyinline = text | db.any

db.anyblock = db.any

db.any = element db:* {
   (attribute * { text }
    | text
    | db.any)*
}


