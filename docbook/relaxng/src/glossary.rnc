# This file is part of DocBook NG: The "Absinthe" Release.

# This schema is a "work-in-progress". It validates a DocBook-like grammar that
# may, in some incarnation, form the basis for DocBook V.next. Or it may not.
# At the moment, it's just an exploration by Norm. It has utterly no normative
# value at all.
#
# Author: Norman Walsh, <ndw@nwalsh.com>
# Source: Derived from DocBook XML V4.3
# Release: $Id$
#

namespace rng  = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace db = "http://docbook.org/docbook-ng"
default namespace = "http://docbook.org/docbook-ng"

general.inlines |= glossary.inlines
list.blocks |= db.glosslist
navigation.components |= db.glossary

glossary.inlines =
   db.firstterm
 | db.glossterm

baseform.attribute = attribute baseform { text }?

# ======================================================================

[
   db:refname [ "glosslist" ]
   db:refpurpose [ "" ]
]
div {

   local.glosslist.attributes = empty

   glosslist.role.attribute = attribute role { text }

   glosslist.attr =
      glosslist.role.attribute?
    & common.attributes
    & common.linking.attributes
    & local.glosslist.attributes

   glosslist.info = docbook.info.titleonly

   db.glosslist =
      element glosslist {
         glosslist.attr,
         glosslist.info?,
         blocks*,
         db.glossentry+
      }
}

# ======================================================================

[
   db:refname [ "glossentry" ]
   db:refpurpose [ "" ]
]
div {

   local.glossentry.attributes = empty

   glossentry.role.attribute = attribute role { text }

   glossentry.attr =
      glossentry.role.attribute?
    & common.attributes
    & common.linking.attributes
    & attribute sortas { text }?
    & local.glossentry.attributes

   db.glossentry =
      element glossentry {
         glossentry.attr,
         db.glossterm,
         db.acronym?,
         db.abbrev?,
         db.indexterm*,
         (db.glosssee | db.glossdef+)
      }
}

# ======================================================================

[
   db:refname [ "glossdef" ]
   db:refpurpose [ "" ]
]
div {

   local.glossdef.attributes = empty

   glossdef.role.attribute = attribute role { text }

   glossdef.attr =
      glossdef.role.attribute?
    & common.attributes
    & common.linking.attributes
    & attribute subject { text }?
    & local.glossdef.attributes

   db.glossdef =
      element glossdef {
         glossdef.attr,
         blocks+,
         db.glossseealso*
      }
}

# ======================================================================

[
   db:refname [ "glosssee" ]
   db:refpurpose [ "" ]
]
div {

   local.glosssee.attributes = empty

   glosssee.role.attribute = attribute role { text }

   glosssee.attr =
      glosssee.role.attribute?
    & common.attributes
    & common.linking.attributes
    & attribute otherterm { xsd:IDREF }?
    & local.glosssee.attributes

   db.glosssee =
      [
         s:rule [
            context = "db:glosssee[@linkend]"
            s:assert [
               test = "local-name(//*[@id=current()/@linkend]) = 'glossentry' and namespace-uri(//*[@id=current()/@linkend]) = 'http://docbook.org/docbook-ng/absinthe'"
               "@linkend on glosssee must point to a glossentry."
            ]
         ]
      ]
      element glosssee {
         glosssee.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "glossseealso" ]
   db:refpurpose [ "" ]
]
div {

   local.glossseealso.attributes = empty

   glossseealso.role.attribute = attribute role { text }

   glossseealso.attr =
      glossseealso.role.attribute?
    & common.attributes
    & common.linking.attributes
    & attribute otherterm { xsd:IDREF }?
    & local.glossseealso.attributes

   db.glossseealso =
      [
         s:rule [
            context = "db:glossseealso[@linkend]"
            s:assert [
               test = "local-name(//*[@id=current()/@linkend]) = 'glossentry' and namespace-uri(//*[@id=current()/@linkend]) = 'http://docbook.org/docbook-ng/absinthe'"
               "@linkend on glossseealso must point to a glossentry."
            ]
         ]
      ]
      element glossseealso {
         glossseealso.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "firstterm" ]
   db:refpurpose [ "" ]
]
div {

   local.firstterm.attributes = empty

   firstterm.role.attribute = attribute role { text }

   firstterm.attr =
      firstterm.role.attribute?
    & common.attributes
    & common.linking.attributes
    & baseform.attribute
    & local.firstterm.attributes

   db.firstterm =
      [
         s:rule [
            context = "db:firstterm[@linkend]"
            s:assert [
               test = "local-name(//*[@id=current()/@linkend]) = 'glossentry' and namespace-uri(//*[@id=current()/@linkend]) = 'http://docbook.org/docbook-ng/absinthe'"
               "@linkend on firstterm must point to a glossentry."
            ]
         ]
      ]
      element firstterm {
         firstterm.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "glossterm" ]
   db:refpurpose [ "" ]
]
div {

   local.glossterm.attributes = empty

   glossterm.role.attribute = attribute role { text }

   glossterm.attr =
      glossterm.role.attribute?
    & common.attributes
    & common.linking.attributes
    & baseform.attribute
    & local.glossterm.attributes

   db.glossterm =
      [
         s:rule [
            context = "db:glossterm[@linkend]"
            s:assert [
               test = "local-name(//*[@id=current()/@linkend]) = 'glossentry' and namespace-uri(//*[@id=current()/@linkend]) = 'http://docbook.org/docbook-ng/absinthe'"
               "@linkend on glossterm must point to a glossentry."
            ]
         ]
      ]
      element glossterm {
         glossterm.attr,
         inlines*
      }
}

# ======================================================================

[
   db:refname [ "glossary" ]
   db:refpurpose [ "" ]
]
div {

   local.glossary.attributes = empty

   glossary.status.attribute = status.attribute

   glossary.role.attribute = attribute role { text }

   glossary.attr =
      glossary.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & glossary.status.attribute?
    & local.glossary.attributes

   glossary.info = docbook.info

   db.glossary =
      element glossary {
         glossary.attr,
         glossary.info,
         blocks*,
         (db.glossdiv+ | db.glossentry+),
         db.bibliography?
      }
}

# ======================================================================

[
   db:refname [ "glossdiv" ]
   db:refpurpose [ "" ]
]
div {

   local.glossdiv.attributes = empty

   glossdiv.status.attribute = status.attribute

   glossdiv.role.attribute = attribute role { text }

   glossdiv.attr =
      glossdiv.role.attribute?
    & common.attributes
    & common.linking.attributes
    & label.attribute?
    & glossdiv.status.attribute?
    & local.glossdiv.attributes

   glossdiv.info = docbook.info.titlereq

   db.glossdiv =
      element glossdiv {
         glossdiv.attr,
         glossdiv.info,
         blocks*,
         db.glossentry+
      }
}


